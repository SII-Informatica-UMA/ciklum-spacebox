{
  "version": 3,
  "sources": ["../../../../../node_modules/jose/dist/browser/runtime/webcrypto.js", "../../../../../node_modules/jose/dist/browser/runtime/digest.js", "../../../../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../../../../node_modules/jose/dist/browser/runtime/base64url.js", "../../../../../node_modules/jose/dist/browser/util/errors.js", "../../../../../node_modules/jose/dist/browser/runtime/random.js", "../../../../../node_modules/jose/dist/browser/lib/iv.js", "../../../../../node_modules/jose/dist/browser/lib/check_iv_length.js", "../../../../../node_modules/jose/dist/browser/runtime/check_cek_length.js", "../../../../../node_modules/jose/dist/browser/runtime/timing_safe_equal.js", "../../../../../node_modules/jose/dist/browser/lib/crypto_key.js", "../../../../../node_modules/jose/dist/browser/lib/invalid_key_input.js", "../../../../../node_modules/jose/dist/browser/runtime/is_key_like.js", "../../../../../node_modules/jose/dist/browser/runtime/decrypt.js", "../../../../../node_modules/jose/dist/browser/lib/is_disjoint.js", "../../../../../node_modules/jose/dist/browser/lib/is_object.js", "../../../../../node_modules/jose/dist/browser/runtime/bogus.js", "../../../../../node_modules/jose/dist/browser/runtime/aeskw.js", "../../../../../node_modules/jose/dist/browser/runtime/ecdhes.js", "../../../../../node_modules/jose/dist/browser/lib/check_p2s.js", "../../../../../node_modules/jose/dist/browser/runtime/pbes2kw.js", "../../../../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js", "../../../../../node_modules/jose/dist/browser/runtime/check_key_length.js", "../../../../../node_modules/jose/dist/browser/runtime/rsaes.js", "../../../../../node_modules/jose/dist/browser/lib/cek.js", "../../../../../node_modules/jose/dist/browser/lib/format_pem.js", "../../../../../node_modules/jose/dist/browser/runtime/asn1.js", "../../../../../node_modules/jose/dist/browser/runtime/jwk_to_key.js", "../../../../../node_modules/jose/dist/browser/key/import.js", "../../../../../node_modules/jose/dist/browser/lib/check_key_type.js", "../../../../../node_modules/jose/dist/browser/runtime/encrypt.js", "../../../../../node_modules/jose/dist/browser/lib/aesgcmkw.js", "../../../../../node_modules/jose/dist/browser/lib/decrypt_key_management.js", "../../../../../node_modules/jose/dist/browser/lib/validate_crit.js", "../../../../../node_modules/jose/dist/browser/lib/validate_algorithms.js", "../../../../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js", "../../../../../node_modules/jose/dist/browser/jwe/compact/decrypt.js", "../../../../../node_modules/jose/dist/browser/jwe/general/decrypt.js", "../../../../../node_modules/jose/dist/browser/runtime/key_to_jwk.js", "../../../../../node_modules/jose/dist/browser/key/export.js", "../../../../../node_modules/jose/dist/browser/lib/encrypt_key_management.js", "../../../../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js", "../../../../../node_modules/jose/dist/browser/jwe/general/encrypt.js", "../../../../../node_modules/jose/dist/browser/runtime/subtle_dsa.js", "../../../../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js", "../../../../../node_modules/jose/dist/browser/runtime/verify.js", "../../../../../node_modules/jose/dist/browser/jws/flattened/verify.js", "../../../../../node_modules/jose/dist/browser/jws/compact/verify.js", "../../../../../node_modules/jose/dist/browser/jws/general/verify.js", "../../../../../node_modules/jose/dist/browser/lib/epoch.js", "../../../../../node_modules/jose/dist/browser/lib/secs.js", "../../../../../node_modules/jose/dist/browser/lib/jwt_claims_set.js", "../../../../../node_modules/jose/dist/browser/jwt/verify.js", "../../../../../node_modules/jose/dist/browser/jwt/decrypt.js", "../../../../../node_modules/jose/dist/browser/jwe/compact/encrypt.js", "../../../../../node_modules/jose/dist/browser/runtime/sign.js", "../../../../../node_modules/jose/dist/browser/jws/flattened/sign.js", "../../../../../node_modules/jose/dist/browser/jws/compact/sign.js", "../../../../../node_modules/jose/dist/browser/jws/general/sign.js", "../../../../../node_modules/jose/dist/browser/jwt/produce.js", "../../../../../node_modules/jose/dist/browser/jwt/sign.js", "../../../../../node_modules/jose/dist/browser/jwt/encrypt.js", "../../../../../node_modules/jose/dist/browser/jwk/thumbprint.js", "../../../../../node_modules/jose/dist/browser/jwk/embedded.js", "../../../../../node_modules/jose/dist/browser/jwks/local.js", "../../../../../node_modules/jose/dist/browser/runtime/fetch_jwks.js", "../../../../../node_modules/jose/dist/browser/jwks/remote.js", "../../../../../node_modules/jose/dist/browser/jwt/unsecured.js", "../../../../../node_modules/jose/dist/browser/util/base64url.js", "../../../../../node_modules/jose/dist/browser/util/decode_protected_header.js", "../../../../../node_modules/jose/dist/browser/util/decode_jwt.js", "../../../../../node_modules/jose/dist/browser/runtime/generate.js", "../../../../../node_modules/jose/dist/browser/key/generate_key_pair.js", "../../../../../node_modules/jose/dist/browser/key/generate_secret.js", "../../../../../node_modules/jose/dist/browser/runtime/runtime.js", "../../../../../node_modules/jose/dist/browser/util/runtime.js"],
  "sourcesContent": ["export default crypto;\r\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\r\n", "import crypto from './webcrypto.js';\r\nconst digest = async (algorithm, data) => {\r\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\r\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\r\n};\r\nexport default digest;\r\n", "import digest from '../runtime/digest.js';\r\nexport const encoder = new TextEncoder();\r\nexport const decoder = new TextDecoder();\r\nconst MAX_INT32 = 2 ** 32;\r\nexport function concat(...buffers) {\r\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\r\n    const buf = new Uint8Array(size);\r\n    let i = 0;\r\n    for (const buffer of buffers) {\r\n        buf.set(buffer, i);\r\n        i += buffer.length;\r\n    }\r\n    return buf;\r\n}\r\nexport function p2s(alg, p2sInput) {\r\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\r\n}\r\nfunction writeUInt32BE(buf, value, offset) {\r\n    if (value < 0 || value >= MAX_INT32) {\r\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\r\n    }\r\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\r\n}\r\nexport function uint64be(value) {\r\n    const high = Math.floor(value / MAX_INT32);\r\n    const low = value % MAX_INT32;\r\n    const buf = new Uint8Array(8);\r\n    writeUInt32BE(buf, high, 0);\r\n    writeUInt32BE(buf, low, 4);\r\n    return buf;\r\n}\r\nexport function uint32be(value) {\r\n    const buf = new Uint8Array(4);\r\n    writeUInt32BE(buf, value);\r\n    return buf;\r\n}\r\nexport function lengthAndInput(input) {\r\n    return concat(uint32be(input.length), input);\r\n}\r\nexport async function concatKdf(secret, bits, value) {\r\n    const iterations = Math.ceil((bits >> 3) / 32);\r\n    const res = new Uint8Array(iterations * 32);\r\n    for (let iter = 0; iter < iterations; iter++) {\r\n        const buf = new Uint8Array(4 + secret.length + value.length);\r\n        buf.set(uint32be(iter + 1));\r\n        buf.set(secret, 4);\r\n        buf.set(value, 4 + secret.length);\r\n        res.set(await digest('sha256', buf), iter * 32);\r\n    }\r\n    return res.slice(0, bits >> 3);\r\n}\r\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\r\nexport const encodeBase64 = (input) => {\r\n    let unencoded = input;\r\n    if (typeof unencoded === 'string') {\r\n        unencoded = encoder.encode(unencoded);\r\n    }\r\n    const CHUNK_SIZE = 0x8000;\r\n    const arr = [];\r\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\r\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\r\n    }\r\n    return btoa(arr.join(''));\r\n};\r\nexport const encode = (input) => {\r\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n};\r\nexport const decodeBase64 = (encoded) => {\r\n    const binary = atob(encoded);\r\n    const bytes = new Uint8Array(binary.length);\r\n    for (let i = 0; i < binary.length; i++) {\r\n        bytes[i] = binary.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n};\r\nexport const decode = (input) => {\r\n    let encoded = input;\r\n    if (encoded instanceof Uint8Array) {\r\n        encoded = decoder.decode(encoded);\r\n    }\r\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\r\n    try {\r\n        return decodeBase64(encoded);\r\n    }\r\n    catch {\r\n        throw new TypeError('The input to be decoded is not correctly encoded.');\r\n    }\r\n};\r\n", "export class JOSEError extends Error {\r\n    static get code() {\r\n        return 'ERR_JOSE_GENERIC';\r\n    }\r\n    constructor(message) {\r\n        super(message);\r\n        this.code = 'ERR_JOSE_GENERIC';\r\n        this.name = this.constructor.name;\r\n        Error.captureStackTrace?.(this, this.constructor);\r\n    }\r\n}\r\nexport class JWTClaimValidationFailed extends JOSEError {\r\n    static get code() {\r\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\r\n    }\r\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\r\n        super(message);\r\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\r\n        this.claim = claim;\r\n        this.reason = reason;\r\n    }\r\n}\r\nexport class JWTExpired extends JOSEError {\r\n    static get code() {\r\n        return 'ERR_JWT_EXPIRED';\r\n    }\r\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\r\n        super(message);\r\n        this.code = 'ERR_JWT_EXPIRED';\r\n        this.claim = claim;\r\n        this.reason = reason;\r\n    }\r\n}\r\nexport class JOSEAlgNotAllowed extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\r\n    }\r\n}\r\nexport class JOSENotSupported extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JOSE_NOT_SUPPORTED';\r\n    }\r\n}\r\nexport class JWEDecryptionFailed extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\r\n        this.message = 'decryption operation failed';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWE_DECRYPTION_FAILED';\r\n    }\r\n}\r\nexport class JWEInvalid extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWE_INVALID';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWE_INVALID';\r\n    }\r\n}\r\nexport class JWSInvalid extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWS_INVALID';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWS_INVALID';\r\n    }\r\n}\r\nexport class JWTInvalid extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWT_INVALID';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWT_INVALID';\r\n    }\r\n}\r\nexport class JWKInvalid extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWK_INVALID';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWK_INVALID';\r\n    }\r\n}\r\nexport class JWKSInvalid extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWKS_INVALID';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWKS_INVALID';\r\n    }\r\n}\r\nexport class JWKSNoMatchingKey extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\r\n        this.message = 'no applicable key found in the JSON Web Key Set';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWKS_NO_MATCHING_KEY';\r\n    }\r\n}\r\nexport class JWKSMultipleMatchingKeys extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\r\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\r\n    }\r\n}\r\nSymbol.asyncIterator;\r\nexport class JWKSTimeout extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWKS_TIMEOUT';\r\n        this.message = 'request timed out';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWKS_TIMEOUT';\r\n    }\r\n}\r\nexport class JWSSignatureVerificationFailed extends JOSEError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\r\n        this.message = 'signature verification failed';\r\n    }\r\n    static get code() {\r\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\r\n    }\r\n}\r\n", "import crypto from './webcrypto.js';\r\nexport default crypto.getRandomValues.bind(crypto);\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nimport random from '../runtime/random.js';\r\nexport function bitLength(alg) {\r\n    switch (alg) {\r\n        case 'A128GCM':\r\n        case 'A128GCMKW':\r\n        case 'A192GCM':\r\n        case 'A192GCMKW':\r\n        case 'A256GCM':\r\n        case 'A256GCMKW':\r\n            return 96;\r\n        case 'A128CBC-HS256':\r\n        case 'A192CBC-HS384':\r\n        case 'A256CBC-HS512':\r\n            return 128;\r\n        default:\r\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\r\n    }\r\n}\r\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\r\n", "import { JWEInvalid } from '../util/errors.js';\r\nimport { bitLength } from './iv.js';\r\nconst checkIvLength = (enc, iv) => {\r\n    if (iv.length << 3 !== bitLength(enc)) {\r\n        throw new JWEInvalid('Invalid Initialization Vector length');\r\n    }\r\n};\r\nexport default checkIvLength;\r\n", "import { JWEInvalid } from '../util/errors.js';\r\nconst checkCekLength = (cek, expected) => {\r\n    const actual = cek.byteLength << 3;\r\n    if (actual !== expected) {\r\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\r\n    }\r\n};\r\nexport default checkCekLength;\r\n", "const timingSafeEqual = (a, b) => {\r\n    if (!(a instanceof Uint8Array)) {\r\n        throw new TypeError('First argument must be a buffer');\r\n    }\r\n    if (!(b instanceof Uint8Array)) {\r\n        throw new TypeError('Second argument must be a buffer');\r\n    }\r\n    if (a.length !== b.length) {\r\n        throw new TypeError('Input buffers must have the same length');\r\n    }\r\n    const len = a.length;\r\n    let out = 0;\r\n    let i = -1;\r\n    while (++i < len) {\r\n        out |= a[i] ^ b[i];\r\n    }\r\n    return out === 0;\r\n};\r\nexport default timingSafeEqual;\r\n", "function unusable(name, prop = 'algorithm.name') {\r\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\r\n}\r\nfunction isAlgorithm(algorithm, name) {\r\n    return algorithm.name === name;\r\n}\r\nfunction getHashLength(hash) {\r\n    return parseInt(hash.name.slice(4), 10);\r\n}\r\nfunction getNamedCurve(alg) {\r\n    switch (alg) {\r\n        case 'ES256':\r\n            return 'P-256';\r\n        case 'ES384':\r\n            return 'P-384';\r\n        case 'ES512':\r\n            return 'P-521';\r\n        default:\r\n            throw new Error('unreachable');\r\n    }\r\n}\r\nfunction checkUsage(key, usages) {\r\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\r\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\r\n        if (usages.length > 2) {\r\n            const last = usages.pop();\r\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\r\n        }\r\n        else if (usages.length === 2) {\r\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\r\n        }\r\n        else {\r\n            msg += `${usages[0]}.`;\r\n        }\r\n        throw new TypeError(msg);\r\n    }\r\n}\r\nexport function checkSigCryptoKey(key, alg, ...usages) {\r\n    switch (alg) {\r\n        case 'HS256':\r\n        case 'HS384':\r\n        case 'HS512': {\r\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\r\n                throw unusable('HMAC');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\r\n                throw unusable('RSASSA-PKCS1-v1_5');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\r\n                throw unusable('RSA-PSS');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'EdDSA': {\r\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\r\n                throw unusable('Ed25519 or Ed448');\r\n            }\r\n            break;\r\n        }\r\n        case 'ES256':\r\n        case 'ES384':\r\n        case 'ES512': {\r\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\r\n                throw unusable('ECDSA');\r\n            const expected = getNamedCurve(alg);\r\n            const actual = key.algorithm.namedCurve;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.namedCurve');\r\n            break;\r\n        }\r\n        default:\r\n            throw new TypeError('CryptoKey does not support this operation');\r\n    }\r\n    checkUsage(key, usages);\r\n}\r\nexport function checkEncCryptoKey(key, alg, ...usages) {\r\n    switch (alg) {\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM': {\r\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\r\n                throw unusable('AES-GCM');\r\n            const expected = parseInt(alg.slice(1, 4), 10);\r\n            const actual = key.algorithm.length;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.length');\r\n            break;\r\n        }\r\n        case 'A128KW':\r\n        case 'A192KW':\r\n        case 'A256KW': {\r\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\r\n                throw unusable('AES-KW');\r\n            const expected = parseInt(alg.slice(1, 4), 10);\r\n            const actual = key.algorithm.length;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.length');\r\n            break;\r\n        }\r\n        case 'ECDH': {\r\n            switch (key.algorithm.name) {\r\n                case 'ECDH':\r\n                case 'X25519':\r\n                case 'X448':\r\n                    break;\r\n                default:\r\n                    throw unusable('ECDH, X25519, or X448');\r\n            }\r\n            break;\r\n        }\r\n        case 'PBES2-HS256+A128KW':\r\n        case 'PBES2-HS384+A192KW':\r\n        case 'PBES2-HS512+A256KW':\r\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\r\n                throw unusable('PBKDF2');\r\n            break;\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\r\n                throw unusable('RSA-OAEP');\r\n            const expected = parseInt(alg.slice(9), 10) || 1;\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        default:\r\n            throw new TypeError('CryptoKey does not support this operation');\r\n    }\r\n    checkUsage(key, usages);\r\n}\r\n", "function message(msg, actual, ...types) {\r\n    if (types.length > 2) {\r\n        const last = types.pop();\r\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\r\n    }\r\n    else if (types.length === 2) {\r\n        msg += `one of type ${types[0]} or ${types[1]}.`;\r\n    }\r\n    else {\r\n        msg += `of type ${types[0]}.`;\r\n    }\r\n    if (actual == null) {\r\n        msg += ` Received ${actual}`;\r\n    }\r\n    else if (typeof actual === 'function' && actual.name) {\r\n        msg += ` Received function ${actual.name}`;\r\n    }\r\n    else if (typeof actual === 'object' && actual != null) {\r\n        if (actual.constructor?.name) {\r\n            msg += ` Received an instance of ${actual.constructor.name}`;\r\n        }\r\n    }\r\n    return msg;\r\n}\r\nexport default (actual, ...types) => {\r\n    return message('Key must be ', actual, ...types);\r\n};\r\nexport function withAlg(alg, actual, ...types) {\r\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\r\n}\r\n", "import { isCryptoKey } from './webcrypto.js';\r\nexport default (key) => {\r\n    return isCryptoKey(key);\r\n};\r\nexport const types = ['CryptoKey'];\r\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\r\nimport checkIvLength from '../lib/check_iv_length.js';\r\nimport checkCekLength from './check_cek_length.js';\r\nimport timingSafeEqual from './timing_safe_equal.js';\r\nimport { JOSENotSupported, JWEDecryptionFailed, JWEInvalid } from '../util/errors.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\r\n    if (!(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\r\n    }\r\n    const keySize = parseInt(enc.slice(1, 4), 10);\r\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\r\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\r\n        hash: `SHA-${keySize << 1}`,\r\n        name: 'HMAC',\r\n    }, false, ['sign']);\r\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\r\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\r\n    let macCheckPassed;\r\n    try {\r\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\r\n    }\r\n    catch {\r\n    }\r\n    if (!macCheckPassed) {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n    let plaintext;\r\n    try {\r\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\r\n    }\r\n    catch {\r\n    }\r\n    if (!plaintext) {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n    return plaintext;\r\n}\r\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\r\n    let encKey;\r\n    if (cek instanceof Uint8Array) {\r\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\r\n    }\r\n    else {\r\n        checkEncCryptoKey(cek, enc, 'decrypt');\r\n        encKey = cek;\r\n    }\r\n    try {\r\n        return new Uint8Array(await crypto.subtle.decrypt({\r\n            additionalData: aad,\r\n            iv,\r\n            name: 'AES-GCM',\r\n            tagLength: 128,\r\n        }, encKey, concat(ciphertext, tag)));\r\n    }\r\n    catch {\r\n        throw new JWEDecryptionFailed();\r\n    }\r\n}\r\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\r\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\r\n    }\r\n    if (!iv) {\r\n        throw new JWEInvalid('JWE Initialization Vector missing');\r\n    }\r\n    if (!tag) {\r\n        throw new JWEInvalid('JWE Authentication Tag missing');\r\n    }\r\n    checkIvLength(enc, iv);\r\n    switch (enc) {\r\n        case 'A128CBC-HS256':\r\n        case 'A192CBC-HS384':\r\n        case 'A256CBC-HS512':\r\n            if (cek instanceof Uint8Array)\r\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\r\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM':\r\n            if (cek instanceof Uint8Array)\r\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\r\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\r\n        default:\r\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\r\n    }\r\n};\r\nexport default decrypt;\r\n", "const isDisjoint = (...headers) => {\r\n    const sources = headers.filter(Boolean);\r\n    if (sources.length === 0 || sources.length === 1) {\r\n        return true;\r\n    }\r\n    let acc;\r\n    for (const header of sources) {\r\n        const parameters = Object.keys(header);\r\n        if (!acc || acc.size === 0) {\r\n            acc = new Set(parameters);\r\n            continue;\r\n        }\r\n        for (const parameter of parameters) {\r\n            if (acc.has(parameter)) {\r\n                return false;\r\n            }\r\n            acc.add(parameter);\r\n        }\r\n    }\r\n    return true;\r\n};\r\nexport default isDisjoint;\r\n", "function isObjectLike(value) {\r\n    return typeof value === 'object' && value !== null;\r\n}\r\nexport default function isObject(input) {\r\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\r\n        return false;\r\n    }\r\n    if (Object.getPrototypeOf(input) === null) {\r\n        return true;\r\n    }\r\n    let proto = input;\r\n    while (Object.getPrototypeOf(proto) !== null) {\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return Object.getPrototypeOf(input) === proto;\r\n}\r\n", "const bogusWebCrypto = [\r\n    { hash: 'SHA-256', name: 'HMAC' },\r\n    true,\r\n    ['sign'],\r\n];\r\nexport default bogusWebCrypto;\r\n", "import bogusWebCrypto from './bogus.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nfunction checkKeySize(key, alg) {\r\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\r\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\r\n    }\r\n}\r\nfunction getCryptoKey(key, alg, usage) {\r\n    if (isCryptoKey(key)) {\r\n        checkEncCryptoKey(key, alg, usage);\r\n        return key;\r\n    }\r\n    if (key instanceof Uint8Array) {\r\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\r\n    }\r\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\r\n}\r\nexport const wrap = async (alg, key, cek) => {\r\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\r\n    checkKeySize(cryptoKey, alg);\r\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\r\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\r\n};\r\nexport const unwrap = async (alg, key, encryptedKey) => {\r\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\r\n    checkKeySize(cryptoKey, alg);\r\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\r\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\r\n};\r\n", "import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\r\n    if (!isCryptoKey(publicKey)) {\r\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\r\n    }\r\n    checkEncCryptoKey(publicKey, 'ECDH');\r\n    if (!isCryptoKey(privateKey)) {\r\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\r\n    }\r\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\r\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\r\n    let length;\r\n    if (publicKey.algorithm.name === 'X25519') {\r\n        length = 256;\r\n    }\r\n    else if (publicKey.algorithm.name === 'X448') {\r\n        length = 448;\r\n    }\r\n    else {\r\n        length =\r\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\r\n    }\r\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\r\n        name: publicKey.algorithm.name,\r\n        public: publicKey,\r\n    }, privateKey, length));\r\n    return concatKdf(sharedSecret, keyLength, value);\r\n}\r\nexport async function generateEpk(key) {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\r\n}\r\nexport function ecdhAllowed(key) {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\r\n        key.algorithm.name === 'X25519' ||\r\n        key.algorithm.name === 'X448');\r\n}\r\n", "import { JWEInvalid } from '../util/errors.js';\r\nexport default function checkP2s(p2s) {\r\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\r\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\r\n    }\r\n}\r\n", "import random from './random.js';\r\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\r\nimport { encode as base64url } from './base64url.js';\r\nimport { wrap, unwrap } from './aeskw.js';\r\nimport checkP2s from '../lib/check_p2s.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nfunction getCryptoKey(key, alg) {\r\n    if (key instanceof Uint8Array) {\r\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\r\n    }\r\n    if (isCryptoKey(key)) {\r\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\r\n        return key;\r\n    }\r\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\r\n}\r\nasync function deriveKey(p2s, alg, p2c, key) {\r\n    checkP2s(p2s);\r\n    const salt = concatSalt(alg, p2s);\r\n    const keylen = parseInt(alg.slice(13, 16), 10);\r\n    const subtleAlg = {\r\n        hash: `SHA-${alg.slice(8, 11)}`,\r\n        iterations: p2c,\r\n        name: 'PBKDF2',\r\n        salt,\r\n    };\r\n    const wrapAlg = {\r\n        length: keylen,\r\n        name: 'AES-KW',\r\n    };\r\n    const cryptoKey = await getCryptoKey(key, alg);\r\n    if (cryptoKey.usages.includes('deriveBits')) {\r\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\r\n    }\r\n    if (cryptoKey.usages.includes('deriveKey')) {\r\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\r\n    }\r\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\r\n}\r\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\r\n    const derived = await deriveKey(p2s, alg, p2c, key);\r\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\r\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\r\n};\r\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\r\n    const derived = await deriveKey(p2s, alg, p2c, key);\r\n    return unwrap(alg.slice(-6), derived, encryptedKey);\r\n};\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nexport default function subtleRsaEs(alg) {\r\n    switch (alg) {\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512':\r\n            return 'RSA-OAEP';\r\n        default:\r\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\r\n    }\r\n}\r\n", "export default (alg, key) => {\r\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\r\n        const { modulusLength } = key.algorithm;\r\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\r\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\r\n        }\r\n    }\r\n};\r\n", "import subtleAlgorithm from './subtle_rsaes.js';\r\nimport bogusWebCrypto from './bogus.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport checkKeyLength from './check_key_length.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nexport const encrypt = async (alg, key, cek) => {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\r\n    checkKeyLength(alg, key);\r\n    if (key.usages.includes('encrypt')) {\r\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\r\n    }\r\n    if (key.usages.includes('wrapKey')) {\r\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\r\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\r\n    }\r\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\r\n};\r\nexport const decrypt = async (alg, key, encryptedKey) => {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\r\n    checkKeyLength(alg, key);\r\n    if (key.usages.includes('decrypt')) {\r\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\r\n    }\r\n    if (key.usages.includes('unwrapKey')) {\r\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\r\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\r\n    }\r\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\r\n};\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nimport random from '../runtime/random.js';\r\nexport function bitLength(alg) {\r\n    switch (alg) {\r\n        case 'A128GCM':\r\n            return 128;\r\n        case 'A192GCM':\r\n            return 192;\r\n        case 'A256GCM':\r\n        case 'A128CBC-HS256':\r\n            return 256;\r\n        case 'A192CBC-HS384':\r\n            return 384;\r\n        case 'A256CBC-HS512':\r\n            return 512;\r\n        default:\r\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\r\n    }\r\n}\r\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\r\n", "export default (b64, descriptor) => {\r\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\r\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\r\n};\r\n", "import crypto, { isCryptoKey } from './webcrypto.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { encodeBase64, decodeBase64 } from './base64url.js';\r\nimport formatPEM from '../lib/format_pem.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport { types } from './is_key_like.js';\r\nconst genericExport = async (keyType, keyFormat, key) => {\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types));\r\n    }\r\n    if (!key.extractable) {\r\n        throw new TypeError('CryptoKey is not extractable');\r\n    }\r\n    if (key.type !== keyType) {\r\n        throw new TypeError(`key is not a ${keyType} key`);\r\n    }\r\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\r\n};\r\nexport const toSPKI = (key) => {\r\n    return genericExport('public', 'spki', key);\r\n};\r\nexport const toPKCS8 = (key) => {\r\n    return genericExport('private', 'pkcs8', key);\r\n};\r\nconst findOid = (keyData, oid, from = 0) => {\r\n    if (from === 0) {\r\n        oid.unshift(oid.length);\r\n        oid.unshift(0x06);\r\n    }\r\n    const i = keyData.indexOf(oid[0], from);\r\n    if (i === -1)\r\n        return false;\r\n    const sub = keyData.subarray(i, i + oid.length);\r\n    if (sub.length !== oid.length)\r\n        return false;\r\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\r\n};\r\nconst getNamedCurve = (keyData) => {\r\n    switch (true) {\r\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\r\n            return 'P-256';\r\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\r\n            return 'P-384';\r\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\r\n            return 'P-521';\r\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\r\n            return 'X25519';\r\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\r\n            return 'X448';\r\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\r\n            return 'Ed25519';\r\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\r\n            return 'Ed448';\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\r\n    }\r\n};\r\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\r\n    let algorithm;\r\n    let keyUsages;\r\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\r\n        .split('')\r\n        .map((c) => c.charCodeAt(0)));\r\n    const isPublic = keyFormat === 'spki';\r\n    switch (alg) {\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512':\r\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512':\r\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512':\r\n            algorithm = {\r\n                name: 'RSA-OAEP',\r\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\r\n            };\r\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\r\n            break;\r\n        case 'ES256':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        case 'ES384':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        case 'ES512':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        case 'ECDH-ES':\r\n        case 'ECDH-ES+A128KW':\r\n        case 'ECDH-ES+A192KW':\r\n        case 'ECDH-ES+A256KW': {\r\n            const namedCurve = getNamedCurve(keyData);\r\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\r\n            keyUsages = isPublic ? [] : ['deriveBits'];\r\n            break;\r\n        }\r\n        case 'EdDSA':\r\n            algorithm = { name: getNamedCurve(keyData) };\r\n            keyUsages = isPublic ? ['verify'] : ['sign'];\r\n            break;\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\r\n    }\r\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, options?.extractable ?? false, keyUsages);\r\n};\r\nexport const fromPKCS8 = (pem, alg, options) => {\r\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\r\n};\r\nexport const fromSPKI = (pem, alg, options) => {\r\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\r\n};\r\nfunction getElement(seq) {\r\n    const result = [];\r\n    let next = 0;\r\n    while (next < seq.length) {\r\n        const nextPart = parseElement(seq.subarray(next));\r\n        result.push(nextPart);\r\n        next += nextPart.byteLength;\r\n    }\r\n    return result;\r\n}\r\nfunction parseElement(bytes) {\r\n    let position = 0;\r\n    let tag = bytes[0] & 0x1f;\r\n    position++;\r\n    if (tag === 0x1f) {\r\n        tag = 0;\r\n        while (bytes[position] >= 0x80) {\r\n            tag = tag * 128 + bytes[position] - 0x80;\r\n            position++;\r\n        }\r\n        tag = tag * 128 + bytes[position] - 0x80;\r\n        position++;\r\n    }\r\n    let length = 0;\r\n    if (bytes[position] < 0x80) {\r\n        length = bytes[position];\r\n        position++;\r\n    }\r\n    else if (length === 0x80) {\r\n        length = 0;\r\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\r\n            if (length > bytes.byteLength) {\r\n                throw new TypeError('invalid indefinite form length');\r\n            }\r\n            length++;\r\n        }\r\n        const byteLength = position + length + 2;\r\n        return {\r\n            byteLength,\r\n            contents: bytes.subarray(position, position + length),\r\n            raw: bytes.subarray(0, byteLength),\r\n        };\r\n    }\r\n    else {\r\n        const numberOfDigits = bytes[position] & 0x7f;\r\n        position++;\r\n        length = 0;\r\n        for (let i = 0; i < numberOfDigits; i++) {\r\n            length = length * 256 + bytes[position];\r\n            position++;\r\n        }\r\n    }\r\n    const byteLength = position + length;\r\n    return {\r\n        byteLength,\r\n        contents: bytes.subarray(position, byteLength),\r\n        raw: bytes.subarray(0, byteLength),\r\n    };\r\n}\r\nfunction spkiFromX509(buf) {\r\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\r\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\r\n}\r\nfunction getSPKI(x509) {\r\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\r\n    const raw = decodeBase64(pem);\r\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\r\n}\r\nexport const fromX509 = (pem, alg, options) => {\r\n    let spki;\r\n    try {\r\n        spki = getSPKI(pem);\r\n    }\r\n    catch (cause) {\r\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\r\n    }\r\n    return fromSPKI(spki, alg, options);\r\n};\r\n", "import crypto from './webcrypto.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nfunction subtleMapping(jwk) {\r\n    let algorithm;\r\n    let keyUsages;\r\n    switch (jwk.kty) {\r\n        case 'RSA': {\r\n            switch (jwk.alg) {\r\n                case 'PS256':\r\n                case 'PS384':\r\n                case 'PS512':\r\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'RS256':\r\n                case 'RS384':\r\n                case 'RS512':\r\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'RSA-OAEP':\r\n                case 'RSA-OAEP-256':\r\n                case 'RSA-OAEP-384':\r\n                case 'RSA-OAEP-512':\r\n                    algorithm = {\r\n                        name: 'RSA-OAEP',\r\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\r\n                    };\r\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        case 'EC': {\r\n            switch (jwk.alg) {\r\n                case 'ES256':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ES384':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ES512':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ECDH-ES':\r\n                case 'ECDH-ES+A128KW':\r\n                case 'ECDH-ES+A192KW':\r\n                case 'ECDH-ES+A256KW':\r\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\r\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        case 'OKP': {\r\n            switch (jwk.alg) {\r\n                case 'EdDSA':\r\n                    algorithm = { name: jwk.crv };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ECDH-ES':\r\n                case 'ECDH-ES+A128KW':\r\n                case 'ECDH-ES+A192KW':\r\n                case 'ECDH-ES+A256KW':\r\n                    algorithm = { name: jwk.crv };\r\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\r\n    }\r\n    return { algorithm, keyUsages };\r\n}\r\nconst parse = async (jwk) => {\r\n    if (!jwk.alg) {\r\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\r\n    }\r\n    const { algorithm, keyUsages } = subtleMapping(jwk);\r\n    const rest = [\r\n        algorithm,\r\n        jwk.ext ?? false,\r\n        jwk.key_ops ?? keyUsages,\r\n    ];\r\n    const keyData = { ...jwk };\r\n    delete keyData.alg;\r\n    delete keyData.use;\r\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\r\n};\r\nexport default parse;\r\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\r\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\r\nimport asKeyObject from '../runtime/jwk_to_key.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport isObject from '../lib/is_object.js';\r\nexport async function importSPKI(spki, alg, options) {\r\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\r\n        throw new TypeError('\"spki\" must be SPKI formatted string');\r\n    }\r\n    return fromSPKI(spki, alg, options);\r\n}\r\nexport async function importX509(x509, alg, options) {\r\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\r\n        throw new TypeError('\"x509\" must be X.509 formatted string');\r\n    }\r\n    return fromX509(x509, alg, options);\r\n}\r\nexport async function importPKCS8(pkcs8, alg, options) {\r\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\r\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\r\n    }\r\n    return fromPKCS8(pkcs8, alg, options);\r\n}\r\nexport async function importJWK(jwk, alg) {\r\n    if (!isObject(jwk)) {\r\n        throw new TypeError('JWK must be an object');\r\n    }\r\n    alg || (alg = jwk.alg);\r\n    switch (jwk.kty) {\r\n        case 'oct':\r\n            if (typeof jwk.k !== 'string' || !jwk.k) {\r\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\r\n            }\r\n            return decodeBase64URL(jwk.k);\r\n        case 'RSA':\r\n            if (jwk.oth !== undefined) {\r\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\r\n            }\r\n        case 'EC':\r\n        case 'OKP':\r\n            return asKeyObject({ ...jwk, alg });\r\n        default:\r\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\r\n    }\r\n}\r\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\r\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\r\nconst symmetricTypeCheck = (alg, key) => {\r\n    if (key instanceof Uint8Array)\r\n        return;\r\n    if (!isKeyLike(key)) {\r\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\r\n    }\r\n    if (key.type !== 'secret') {\r\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\r\n    }\r\n};\r\nconst asymmetricTypeCheck = (alg, key, usage) => {\r\n    if (!isKeyLike(key)) {\r\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\r\n    }\r\n    if (key.type === 'secret') {\r\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\r\n    }\r\n    if (usage === 'sign' && key.type === 'public') {\r\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\r\n    }\r\n    if (usage === 'decrypt' && key.type === 'public') {\r\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\r\n    }\r\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\r\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\r\n    }\r\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\r\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\r\n    }\r\n};\r\nconst checkKeyType = (alg, key, usage) => {\r\n    const symmetric = alg.startsWith('HS') ||\r\n        alg === 'dir' ||\r\n        alg.startsWith('PBES2') ||\r\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\r\n    if (symmetric) {\r\n        symmetricTypeCheck(alg, key);\r\n    }\r\n    else {\r\n        asymmetricTypeCheck(alg, key, usage);\r\n    }\r\n};\r\nexport default checkKeyType;\r\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\r\nimport checkIvLength from '../lib/check_iv_length.js';\r\nimport checkCekLength from './check_cek_length.js';\r\nimport crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport generateIv from '../lib/iv.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport { types } from './is_key_like.js';\r\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\r\n    if (!(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\r\n    }\r\n    const keySize = parseInt(enc.slice(1, 4), 10);\r\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\r\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\r\n        hash: `SHA-${keySize << 1}`,\r\n        name: 'HMAC',\r\n    }, false, ['sign']);\r\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\r\n        iv,\r\n        name: 'AES-CBC',\r\n    }, encKey, plaintext));\r\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\r\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\r\n    return { ciphertext, tag, iv };\r\n}\r\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\r\n    let encKey;\r\n    if (cek instanceof Uint8Array) {\r\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\r\n    }\r\n    else {\r\n        checkEncCryptoKey(cek, enc, 'encrypt');\r\n        encKey = cek;\r\n    }\r\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\r\n        additionalData: aad,\r\n        iv,\r\n        name: 'AES-GCM',\r\n        tagLength: 128,\r\n    }, encKey, plaintext));\r\n    const tag = encrypted.slice(-16);\r\n    const ciphertext = encrypted.slice(0, -16);\r\n    return { ciphertext, tag, iv };\r\n}\r\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\r\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\r\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\r\n    }\r\n    if (iv) {\r\n        checkIvLength(enc, iv);\r\n    }\r\n    else {\r\n        iv = generateIv(enc);\r\n    }\r\n    switch (enc) {\r\n        case 'A128CBC-HS256':\r\n        case 'A192CBC-HS384':\r\n        case 'A256CBC-HS512':\r\n            if (cek instanceof Uint8Array) {\r\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\r\n            }\r\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM':\r\n            if (cek instanceof Uint8Array) {\r\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\r\n            }\r\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\r\n        default:\r\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\r\n    }\r\n};\r\nexport default encrypt;\r\n", "import encrypt from '../runtime/encrypt.js';\r\nimport decrypt from '../runtime/decrypt.js';\r\nimport { encode as base64url } from '../runtime/base64url.js';\r\nexport async function wrap(alg, key, cek, iv) {\r\n    const jweAlgorithm = alg.slice(0, 7);\r\n    const wrapped = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\r\n    return {\r\n        encryptedKey: wrapped.ciphertext,\r\n        iv: base64url(wrapped.iv),\r\n        tag: base64url(wrapped.tag),\r\n    };\r\n}\r\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\r\n    const jweAlgorithm = alg.slice(0, 7);\r\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\r\n}\r\n", "import { unwrap as aesKw } from '../runtime/aeskw.js';\r\nimport * as ECDH from '../runtime/ecdhes.js';\r\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\r\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\r\nimport { decode as base64url } from '../runtime/base64url.js';\r\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\r\nimport { bitLength as cekLength } from '../lib/cek.js';\r\nimport { importJWK } from '../key/import.js';\r\nimport checkKeyType from './check_key_type.js';\r\nimport isObject from './is_object.js';\r\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\r\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\r\n    checkKeyType(alg, key, 'decrypt');\r\n    switch (alg) {\r\n        case 'dir': {\r\n            if (encryptedKey !== undefined)\r\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\r\n            return key;\r\n        }\r\n        case 'ECDH-ES':\r\n            if (encryptedKey !== undefined)\r\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\r\n        case 'ECDH-ES+A128KW':\r\n        case 'ECDH-ES+A192KW':\r\n        case 'ECDH-ES+A256KW': {\r\n            if (!isObject(joseHeader.epk))\r\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\r\n            if (!ECDH.ecdhAllowed(key))\r\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\r\n            const epk = await importJWK(joseHeader.epk, alg);\r\n            let partyUInfo;\r\n            let partyVInfo;\r\n            if (joseHeader.apu !== undefined) {\r\n                if (typeof joseHeader.apu !== 'string')\r\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\r\n                try {\r\n                    partyUInfo = base64url(joseHeader.apu);\r\n                }\r\n                catch {\r\n                    throw new JWEInvalid('Failed to base64url decode the apu');\r\n                }\r\n            }\r\n            if (joseHeader.apv !== undefined) {\r\n                if (typeof joseHeader.apv !== 'string')\r\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\r\n                try {\r\n                    partyVInfo = base64url(joseHeader.apv);\r\n                }\r\n                catch {\r\n                    throw new JWEInvalid('Failed to base64url decode the apv');\r\n                }\r\n            }\r\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\r\n            if (alg === 'ECDH-ES')\r\n                return sharedSecret;\r\n            if (encryptedKey === undefined)\r\n                throw new JWEInvalid('JWE Encrypted Key missing');\r\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\r\n        }\r\n        case 'RSA1_5':\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512': {\r\n            if (encryptedKey === undefined)\r\n                throw new JWEInvalid('JWE Encrypted Key missing');\r\n            return rsaEs(alg, key, encryptedKey);\r\n        }\r\n        case 'PBES2-HS256+A128KW':\r\n        case 'PBES2-HS384+A192KW':\r\n        case 'PBES2-HS512+A256KW': {\r\n            if (encryptedKey === undefined)\r\n                throw new JWEInvalid('JWE Encrypted Key missing');\r\n            if (typeof joseHeader.p2c !== 'number')\r\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\r\n            const p2cLimit = options?.maxPBES2Count || 10000;\r\n            if (joseHeader.p2c > p2cLimit)\r\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\r\n            if (typeof joseHeader.p2s !== 'string')\r\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\r\n            let p2s;\r\n            try {\r\n                p2s = base64url(joseHeader.p2s);\r\n            }\r\n            catch {\r\n                throw new JWEInvalid('Failed to base64url decode the p2s');\r\n            }\r\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\r\n        }\r\n        case 'A128KW':\r\n        case 'A192KW':\r\n        case 'A256KW': {\r\n            if (encryptedKey === undefined)\r\n                throw new JWEInvalid('JWE Encrypted Key missing');\r\n            return aesKw(alg, key, encryptedKey);\r\n        }\r\n        case 'A128GCMKW':\r\n        case 'A192GCMKW':\r\n        case 'A256GCMKW': {\r\n            if (encryptedKey === undefined)\r\n                throw new JWEInvalid('JWE Encrypted Key missing');\r\n            if (typeof joseHeader.iv !== 'string')\r\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\r\n            if (typeof joseHeader.tag !== 'string')\r\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\r\n            let iv;\r\n            try {\r\n                iv = base64url(joseHeader.iv);\r\n            }\r\n            catch {\r\n                throw new JWEInvalid('Failed to base64url decode the iv');\r\n            }\r\n            let tag;\r\n            try {\r\n                tag = base64url(joseHeader.tag);\r\n            }\r\n            catch {\r\n                throw new JWEInvalid('Failed to base64url decode the tag');\r\n            }\r\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\r\n        }\r\n        default: {\r\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\r\n        }\r\n    }\r\n}\r\nexport default decryptKeyManagement;\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\r\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\r\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\r\n    }\r\n    if (!protectedHeader || protectedHeader.crit === undefined) {\r\n        return new Set();\r\n    }\r\n    if (!Array.isArray(protectedHeader.crit) ||\r\n        protectedHeader.crit.length === 0 ||\r\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\r\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\r\n    }\r\n    let recognized;\r\n    if (recognizedOption !== undefined) {\r\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\r\n    }\r\n    else {\r\n        recognized = recognizedDefault;\r\n    }\r\n    for (const parameter of protectedHeader.crit) {\r\n        if (!recognized.has(parameter)) {\r\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\r\n        }\r\n        if (joseHeader[parameter] === undefined) {\r\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\r\n        }\r\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\r\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\r\n        }\r\n    }\r\n    return new Set(protectedHeader.crit);\r\n}\r\nexport default validateCrit;\r\n", "const validateAlgorithms = (option, algorithms) => {\r\n    if (algorithms !== undefined &&\r\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\r\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\r\n    }\r\n    if (!algorithms) {\r\n        return undefined;\r\n    }\r\n    return new Set(algorithms);\r\n};\r\nexport default validateAlgorithms;\r\n", "import { decode as base64url } from '../../runtime/base64url.js';\r\nimport decrypt from '../../runtime/decrypt.js';\r\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport isObject from '../../lib/is_object.js';\r\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\r\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\r\nimport generateCek from '../../lib/cek.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\r\nexport async function flattenedDecrypt(jwe, key, options) {\r\n    if (!isObject(jwe)) {\r\n        throw new JWEInvalid('Flattened JWE must be an object');\r\n    }\r\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\r\n        throw new JWEInvalid('JOSE Header missing');\r\n    }\r\n    if (jwe.iv !== undefined && typeof jwe.iv !== 'string') {\r\n        throw new JWEInvalid('JWE Initialization Vector incorrect type');\r\n    }\r\n    if (typeof jwe.ciphertext !== 'string') {\r\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\r\n    }\r\n    if (jwe.tag !== undefined && typeof jwe.tag !== 'string') {\r\n        throw new JWEInvalid('JWE Authentication Tag incorrect type');\r\n    }\r\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\r\n        throw new JWEInvalid('JWE Protected Header incorrect type');\r\n    }\r\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\r\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\r\n    }\r\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\r\n        throw new JWEInvalid('JWE AAD incorrect type');\r\n    }\r\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\r\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\r\n    }\r\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\r\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\r\n    }\r\n    let parsedProt;\r\n    if (jwe.protected) {\r\n        try {\r\n            const protectedHeader = base64url(jwe.protected);\r\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\r\n        }\r\n        catch {\r\n            throw new JWEInvalid('JWE Protected Header is invalid');\r\n        }\r\n    }\r\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\r\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\r\n    }\r\n    const joseHeader = {\r\n        ...parsedProt,\r\n        ...jwe.header,\r\n        ...jwe.unprotected,\r\n    };\r\n    validateCrit(JWEInvalid, new Map(), options?.crit, parsedProt, joseHeader);\r\n    if (joseHeader.zip !== undefined) {\r\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\r\n    }\r\n    const { alg, enc } = joseHeader;\r\n    if (typeof alg !== 'string' || !alg) {\r\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\r\n    }\r\n    if (typeof enc !== 'string' || !enc) {\r\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\r\n    }\r\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\r\n    const contentEncryptionAlgorithms = options &&\r\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\r\n    if ((keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) ||\r\n        (!keyManagementAlgorithms && alg.startsWith('PBES2'))) {\r\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\r\n    }\r\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\r\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter value not allowed');\r\n    }\r\n    let encryptedKey;\r\n    if (jwe.encrypted_key !== undefined) {\r\n        try {\r\n            encryptedKey = base64url(jwe.encrypted_key);\r\n        }\r\n        catch {\r\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\r\n        }\r\n    }\r\n    let resolvedKey = false;\r\n    if (typeof key === 'function') {\r\n        key = await key(parsedProt, jwe);\r\n        resolvedKey = true;\r\n    }\r\n    let cek;\r\n    try {\r\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\r\n    }\r\n    catch (err) {\r\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\r\n            throw err;\r\n        }\r\n        cek = generateCek(enc);\r\n    }\r\n    let iv;\r\n    let tag;\r\n    if (jwe.iv !== undefined) {\r\n        try {\r\n            iv = base64url(jwe.iv);\r\n        }\r\n        catch {\r\n            throw new JWEInvalid('Failed to base64url decode the iv');\r\n        }\r\n    }\r\n    if (jwe.tag !== undefined) {\r\n        try {\r\n            tag = base64url(jwe.tag);\r\n        }\r\n        catch {\r\n            throw new JWEInvalid('Failed to base64url decode the tag');\r\n        }\r\n    }\r\n    const protectedHeader = encoder.encode(jwe.protected ?? '');\r\n    let additionalData;\r\n    if (jwe.aad !== undefined) {\r\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\r\n    }\r\n    else {\r\n        additionalData = protectedHeader;\r\n    }\r\n    let ciphertext;\r\n    try {\r\n        ciphertext = base64url(jwe.ciphertext);\r\n    }\r\n    catch {\r\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\r\n    }\r\n    const plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\r\n    const result = { plaintext };\r\n    if (jwe.protected !== undefined) {\r\n        result.protectedHeader = parsedProt;\r\n    }\r\n    if (jwe.aad !== undefined) {\r\n        try {\r\n            result.additionalAuthenticatedData = base64url(jwe.aad);\r\n        }\r\n        catch {\r\n            throw new JWEInvalid('Failed to base64url decode the aad');\r\n        }\r\n    }\r\n    if (jwe.unprotected !== undefined) {\r\n        result.sharedUnprotectedHeader = jwe.unprotected;\r\n    }\r\n    if (jwe.header !== undefined) {\r\n        result.unprotectedHeader = jwe.header;\r\n    }\r\n    if (resolvedKey) {\r\n        return { ...result, key };\r\n    }\r\n    return result;\r\n}\r\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\r\nimport { JWEInvalid } from '../../util/errors.js';\r\nimport { decoder } from '../../lib/buffer_utils.js';\r\nexport async function compactDecrypt(jwe, key, options) {\r\n    if (jwe instanceof Uint8Array) {\r\n        jwe = decoder.decode(jwe);\r\n    }\r\n    if (typeof jwe !== 'string') {\r\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\r\n    }\r\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\r\n    if (length !== 5) {\r\n        throw new JWEInvalid('Invalid Compact JWE');\r\n    }\r\n    const decrypted = await flattenedDecrypt({\r\n        ciphertext,\r\n        iv: iv || undefined,\r\n        protected: protectedHeader,\r\n        tag: tag || undefined,\r\n        encrypted_key: encryptedKey || undefined,\r\n    }, key, options);\r\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: decrypted.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\r\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\r\nimport isObject from '../../lib/is_object.js';\r\nexport async function generalDecrypt(jwe, key, options) {\r\n    if (!isObject(jwe)) {\r\n        throw new JWEInvalid('General JWE must be an object');\r\n    }\r\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\r\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\r\n    }\r\n    if (!jwe.recipients.length) {\r\n        throw new JWEInvalid('JWE Recipients has no members');\r\n    }\r\n    for (const recipient of jwe.recipients) {\r\n        try {\r\n            return await flattenedDecrypt({\r\n                aad: jwe.aad,\r\n                ciphertext: jwe.ciphertext,\r\n                encrypted_key: recipient.encrypted_key,\r\n                header: recipient.header,\r\n                iv: jwe.iv,\r\n                protected: jwe.protected,\r\n                tag: jwe.tag,\r\n                unprotected: jwe.unprotected,\r\n            }, key, options);\r\n        }\r\n        catch {\r\n        }\r\n    }\r\n    throw new JWEDecryptionFailed();\r\n}\r\n", "import crypto, { isCryptoKey } from './webcrypto.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { encode as base64url } from './base64url.js';\r\nimport { types } from './is_key_like.js';\r\nconst keyToJWK = async (key) => {\r\n    if (key instanceof Uint8Array) {\r\n        return {\r\n            kty: 'oct',\r\n            k: base64url(key),\r\n        };\r\n    }\r\n    if (!isCryptoKey(key)) {\r\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\r\n    }\r\n    if (!key.extractable) {\r\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\r\n    }\r\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\r\n    return jwk;\r\n};\r\nexport default keyToJWK;\r\n", "import { toSPKI as exportPublic } from '../runtime/asn1.js';\r\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\r\nimport keyToJWK from '../runtime/key_to_jwk.js';\r\nexport async function exportSPKI(key) {\r\n    return exportPublic(key);\r\n}\r\nexport async function exportPKCS8(key) {\r\n    return exportPrivate(key);\r\n}\r\nexport async function exportJWK(key) {\r\n    return keyToJWK(key);\r\n}\r\n", "import { wrap as aesKw } from '../runtime/aeskw.js';\r\nimport * as ECDH from '../runtime/ecdhes.js';\r\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\r\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\r\nimport { encode as base64url } from '../runtime/base64url.js';\r\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport { exportJWK } from '../key/export.js';\r\nimport checkKeyType from './check_key_type.js';\r\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\r\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\r\n    let encryptedKey;\r\n    let parameters;\r\n    let cek;\r\n    checkKeyType(alg, key, 'encrypt');\r\n    switch (alg) {\r\n        case 'dir': {\r\n            cek = key;\r\n            break;\r\n        }\r\n        case 'ECDH-ES':\r\n        case 'ECDH-ES+A128KW':\r\n        case 'ECDH-ES+A192KW':\r\n        case 'ECDH-ES+A256KW': {\r\n            if (!ECDH.ecdhAllowed(key)) {\r\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\r\n            }\r\n            const { apu, apv } = providedParameters;\r\n            let { epk: ephemeralKey } = providedParameters;\r\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\r\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\r\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\r\n            parameters = { epk: { x, crv, kty } };\r\n            if (kty === 'EC')\r\n                parameters.epk.y = y;\r\n            if (apu)\r\n                parameters.apu = base64url(apu);\r\n            if (apv)\r\n                parameters.apv = base64url(apv);\r\n            if (alg === 'ECDH-ES') {\r\n                cek = sharedSecret;\r\n                break;\r\n            }\r\n            cek = providedCek || generateCek(enc);\r\n            const kwAlg = alg.slice(-6);\r\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\r\n            break;\r\n        }\r\n        case 'RSA1_5':\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512': {\r\n            cek = providedCek || generateCek(enc);\r\n            encryptedKey = await rsaEs(alg, key, cek);\r\n            break;\r\n        }\r\n        case 'PBES2-HS256+A128KW':\r\n        case 'PBES2-HS384+A192KW':\r\n        case 'PBES2-HS512+A256KW': {\r\n            cek = providedCek || generateCek(enc);\r\n            const { p2c, p2s } = providedParameters;\r\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\r\n            break;\r\n        }\r\n        case 'A128KW':\r\n        case 'A192KW':\r\n        case 'A256KW': {\r\n            cek = providedCek || generateCek(enc);\r\n            encryptedKey = await aesKw(alg, key, cek);\r\n            break;\r\n        }\r\n        case 'A128GCMKW':\r\n        case 'A192GCMKW':\r\n        case 'A256GCMKW': {\r\n            cek = providedCek || generateCek(enc);\r\n            const { iv } = providedParameters;\r\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\r\n            break;\r\n        }\r\n        default: {\r\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\r\n        }\r\n    }\r\n    return { cek, encryptedKey, parameters };\r\n}\r\nexport default encryptKeyManagement;\r\n", "import { encode as base64url } from '../../runtime/base64url.js';\r\nimport encrypt from '../../runtime/encrypt.js';\r\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\r\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nexport const unprotected = Symbol();\r\nexport class FlattenedEncrypt {\r\n    constructor(plaintext) {\r\n        if (!(plaintext instanceof Uint8Array)) {\r\n            throw new TypeError('plaintext must be an instance of Uint8Array');\r\n        }\r\n        this._plaintext = plaintext;\r\n    }\r\n    setKeyManagementParameters(parameters) {\r\n        if (this._keyManagementParameters) {\r\n            throw new TypeError('setKeyManagementParameters can only be called once');\r\n        }\r\n        this._keyManagementParameters = parameters;\r\n        return this;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this._protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this._protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\r\n        if (this._sharedUnprotectedHeader) {\r\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\r\n        }\r\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\r\n        return this;\r\n    }\r\n    setUnprotectedHeader(unprotectedHeader) {\r\n        if (this._unprotectedHeader) {\r\n            throw new TypeError('setUnprotectedHeader can only be called once');\r\n        }\r\n        this._unprotectedHeader = unprotectedHeader;\r\n        return this;\r\n    }\r\n    setAdditionalAuthenticatedData(aad) {\r\n        this._aad = aad;\r\n        return this;\r\n    }\r\n    setContentEncryptionKey(cek) {\r\n        if (this._cek) {\r\n            throw new TypeError('setContentEncryptionKey can only be called once');\r\n        }\r\n        this._cek = cek;\r\n        return this;\r\n    }\r\n    setInitializationVector(iv) {\r\n        if (this._iv) {\r\n            throw new TypeError('setInitializationVector can only be called once');\r\n        }\r\n        this._iv = iv;\r\n        return this;\r\n    }\r\n    async encrypt(key, options) {\r\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\r\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\r\n        }\r\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\r\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\r\n        }\r\n        const joseHeader = {\r\n            ...this._protectedHeader,\r\n            ...this._unprotectedHeader,\r\n            ...this._sharedUnprotectedHeader,\r\n        };\r\n        validateCrit(JWEInvalid, new Map(), options?.crit, this._protectedHeader, joseHeader);\r\n        if (joseHeader.zip !== undefined) {\r\n            throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\r\n        }\r\n        const { alg, enc } = joseHeader;\r\n        if (typeof alg !== 'string' || !alg) {\r\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n        }\r\n        if (typeof enc !== 'string' || !enc) {\r\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\r\n        }\r\n        let encryptedKey;\r\n        if (this._cek && (alg === 'dir' || alg === 'ECDH-ES')) {\r\n            throw new TypeError(`setContentEncryptionKey cannot be called with JWE \"alg\" (Algorithm) Header ${alg}`);\r\n        }\r\n        let cek;\r\n        {\r\n            let parameters;\r\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\r\n            if (parameters) {\r\n                if (options && unprotected in options) {\r\n                    if (!this._unprotectedHeader) {\r\n                        this.setUnprotectedHeader(parameters);\r\n                    }\r\n                    else {\r\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\r\n                    }\r\n                }\r\n                else {\r\n                    if (!this._protectedHeader) {\r\n                        this.setProtectedHeader(parameters);\r\n                    }\r\n                    else {\r\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let additionalData;\r\n        let protectedHeader;\r\n        let aadMember;\r\n        if (this._protectedHeader) {\r\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\r\n        }\r\n        else {\r\n            protectedHeader = encoder.encode('');\r\n        }\r\n        if (this._aad) {\r\n            aadMember = base64url(this._aad);\r\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\r\n        }\r\n        else {\r\n            additionalData = protectedHeader;\r\n        }\r\n        const { ciphertext, tag, iv } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData);\r\n        const jwe = {\r\n            ciphertext: base64url(ciphertext),\r\n        };\r\n        if (iv) {\r\n            jwe.iv = base64url(iv);\r\n        }\r\n        if (tag) {\r\n            jwe.tag = base64url(tag);\r\n        }\r\n        if (encryptedKey) {\r\n            jwe.encrypted_key = base64url(encryptedKey);\r\n        }\r\n        if (aadMember) {\r\n            jwe.aad = aadMember;\r\n        }\r\n        if (this._protectedHeader) {\r\n            jwe.protected = decoder.decode(protectedHeader);\r\n        }\r\n        if (this._sharedUnprotectedHeader) {\r\n            jwe.unprotected = this._sharedUnprotectedHeader;\r\n        }\r\n        if (this._unprotectedHeader) {\r\n            jwe.header = this._unprotectedHeader;\r\n        }\r\n        return jwe;\r\n    }\r\n}\r\n", "import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\r\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\r\nimport generateCek from '../../lib/cek.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\r\nimport { encode as base64url } from '../../runtime/base64url.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nclass IndividualRecipient {\r\n    constructor(enc, key, options) {\r\n        this.parent = enc;\r\n        this.key = key;\r\n        this.options = options;\r\n    }\r\n    setUnprotectedHeader(unprotectedHeader) {\r\n        if (this.unprotectedHeader) {\r\n            throw new TypeError('setUnprotectedHeader can only be called once');\r\n        }\r\n        this.unprotectedHeader = unprotectedHeader;\r\n        return this;\r\n    }\r\n    addRecipient(...args) {\r\n        return this.parent.addRecipient(...args);\r\n    }\r\n    encrypt(...args) {\r\n        return this.parent.encrypt(...args);\r\n    }\r\n    done() {\r\n        return this.parent;\r\n    }\r\n}\r\nexport class GeneralEncrypt {\r\n    constructor(plaintext) {\r\n        this._recipients = [];\r\n        this._plaintext = plaintext;\r\n    }\r\n    addRecipient(key, options) {\r\n        const recipient = new IndividualRecipient(this, key, { crit: options?.crit });\r\n        this._recipients.push(recipient);\r\n        return recipient;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this._protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this._protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\r\n        if (this._unprotectedHeader) {\r\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\r\n        }\r\n        this._unprotectedHeader = sharedUnprotectedHeader;\r\n        return this;\r\n    }\r\n    setAdditionalAuthenticatedData(aad) {\r\n        this._aad = aad;\r\n        return this;\r\n    }\r\n    async encrypt() {\r\n        if (!this._recipients.length) {\r\n            throw new JWEInvalid('at least one recipient must be added');\r\n        }\r\n        if (this._recipients.length === 1) {\r\n            const [recipient] = this._recipients;\r\n            const flattened = await new FlattenedEncrypt(this._plaintext)\r\n                .setAdditionalAuthenticatedData(this._aad)\r\n                .setProtectedHeader(this._protectedHeader)\r\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\r\n                .setUnprotectedHeader(recipient.unprotectedHeader)\r\n                .encrypt(recipient.key, { ...recipient.options });\r\n            const jwe = {\r\n                ciphertext: flattened.ciphertext,\r\n                iv: flattened.iv,\r\n                recipients: [{}],\r\n                tag: flattened.tag,\r\n            };\r\n            if (flattened.aad)\r\n                jwe.aad = flattened.aad;\r\n            if (flattened.protected)\r\n                jwe.protected = flattened.protected;\r\n            if (flattened.unprotected)\r\n                jwe.unprotected = flattened.unprotected;\r\n            if (flattened.encrypted_key)\r\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\r\n            if (flattened.header)\r\n                jwe.recipients[0].header = flattened.header;\r\n            return jwe;\r\n        }\r\n        let enc;\r\n        for (let i = 0; i < this._recipients.length; i++) {\r\n            const recipient = this._recipients[i];\r\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\r\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\r\n            }\r\n            const joseHeader = {\r\n                ...this._protectedHeader,\r\n                ...this._unprotectedHeader,\r\n                ...recipient.unprotectedHeader,\r\n            };\r\n            const { alg } = joseHeader;\r\n            if (typeof alg !== 'string' || !alg) {\r\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n            }\r\n            if (alg === 'dir' || alg === 'ECDH-ES') {\r\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\r\n            }\r\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\r\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\r\n            }\r\n            if (!enc) {\r\n                enc = joseHeader.enc;\r\n            }\r\n            else if (enc !== joseHeader.enc) {\r\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\r\n            }\r\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\r\n            if (joseHeader.zip !== undefined) {\r\n                throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\r\n            }\r\n        }\r\n        const cek = generateCek(enc);\r\n        const jwe = {\r\n            ciphertext: '',\r\n            iv: '',\r\n            recipients: [],\r\n            tag: '',\r\n        };\r\n        for (let i = 0; i < this._recipients.length; i++) {\r\n            const recipient = this._recipients[i];\r\n            const target = {};\r\n            jwe.recipients.push(target);\r\n            const joseHeader = {\r\n                ...this._protectedHeader,\r\n                ...this._unprotectedHeader,\r\n                ...recipient.unprotectedHeader,\r\n            };\r\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\r\n            if (i === 0) {\r\n                const flattened = await new FlattenedEncrypt(this._plaintext)\r\n                    .setAdditionalAuthenticatedData(this._aad)\r\n                    .setContentEncryptionKey(cek)\r\n                    .setProtectedHeader(this._protectedHeader)\r\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\r\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\r\n                    .setKeyManagementParameters({ p2c })\r\n                    .encrypt(recipient.key, {\r\n                    ...recipient.options,\r\n                    [unprotected]: true,\r\n                });\r\n                jwe.ciphertext = flattened.ciphertext;\r\n                jwe.iv = flattened.iv;\r\n                jwe.tag = flattened.tag;\r\n                if (flattened.aad)\r\n                    jwe.aad = flattened.aad;\r\n                if (flattened.protected)\r\n                    jwe.protected = flattened.protected;\r\n                if (flattened.unprotected)\r\n                    jwe.unprotected = flattened.unprotected;\r\n                target.encrypted_key = flattened.encrypted_key;\r\n                if (flattened.header)\r\n                    target.header = flattened.header;\r\n                continue;\r\n            }\r\n            const { encryptedKey, parameters } = await encryptKeyManagement(recipient.unprotectedHeader?.alg ||\r\n                this._protectedHeader?.alg ||\r\n                this._unprotectedHeader?.alg, enc, recipient.key, cek, { p2c });\r\n            target.encrypted_key = base64url(encryptedKey);\r\n            if (recipient.unprotectedHeader || parameters)\r\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\r\n        }\r\n        return jwe;\r\n    }\r\n}\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nexport default function subtleDsa(alg, algorithm) {\r\n    const hash = `SHA-${alg.slice(-3)}`;\r\n    switch (alg) {\r\n        case 'HS256':\r\n        case 'HS384':\r\n        case 'HS512':\r\n            return { hash, name: 'HMAC' };\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512':\r\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512':\r\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\r\n        case 'ES256':\r\n        case 'ES384':\r\n        case 'ES512':\r\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\r\n        case 'EdDSA':\r\n            return { name: algorithm.name };\r\n        default:\r\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\r\n    }\r\n}\r\n", "import crypto, { isCryptoKey } from './webcrypto.js';\r\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\r\nimport invalidKeyInput from '../lib/invalid_key_input.js';\r\nimport { types } from './is_key_like.js';\r\nexport default function getCryptoKey(alg, key, usage) {\r\n    if (isCryptoKey(key)) {\r\n        checkSigCryptoKey(key, alg, usage);\r\n        return key;\r\n    }\r\n    if (key instanceof Uint8Array) {\r\n        if (!alg.startsWith('HS')) {\r\n            throw new TypeError(invalidKeyInput(key, ...types));\r\n        }\r\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\r\n    }\r\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\r\n}\r\n", "import subtleAlgorithm from './subtle_dsa.js';\r\nimport crypto from './webcrypto.js';\r\nimport checkKeyLength from './check_key_length.js';\r\nimport getVerifyKey from './get_sign_verify_key.js';\r\nconst verify = async (alg, key, signature, data) => {\r\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\r\n    checkKeyLength(alg, cryptoKey);\r\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\r\n    try {\r\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n};\r\nexport default verify;\r\n", "import { decode as base64url } from '../../runtime/base64url.js';\r\nimport verify from '../../runtime/verify.js';\r\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\r\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport isObject from '../../lib/is_object.js';\r\nimport checkKeyType from '../../lib/check_key_type.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\r\nexport async function flattenedVerify(jws, key, options) {\r\n    if (!isObject(jws)) {\r\n        throw new JWSInvalid('Flattened JWS must be an object');\r\n    }\r\n    if (jws.protected === undefined && jws.header === undefined) {\r\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\r\n    }\r\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\r\n        throw new JWSInvalid('JWS Protected Header incorrect type');\r\n    }\r\n    if (jws.payload === undefined) {\r\n        throw new JWSInvalid('JWS Payload missing');\r\n    }\r\n    if (typeof jws.signature !== 'string') {\r\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\r\n    }\r\n    if (jws.header !== undefined && !isObject(jws.header)) {\r\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\r\n    }\r\n    let parsedProt = {};\r\n    if (jws.protected) {\r\n        try {\r\n            const protectedHeader = base64url(jws.protected);\r\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\r\n        }\r\n        catch {\r\n            throw new JWSInvalid('JWS Protected Header is invalid');\r\n        }\r\n    }\r\n    if (!isDisjoint(parsedProt, jws.header)) {\r\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\r\n    }\r\n    const joseHeader = {\r\n        ...parsedProt,\r\n        ...jws.header,\r\n    };\r\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\r\n    let b64 = true;\r\n    if (extensions.has('b64')) {\r\n        b64 = parsedProt.b64;\r\n        if (typeof b64 !== 'boolean') {\r\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\r\n        }\r\n    }\r\n    const { alg } = joseHeader;\r\n    if (typeof alg !== 'string' || !alg) {\r\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n    }\r\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\r\n    if (algorithms && !algorithms.has(alg)) {\r\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\r\n    }\r\n    if (b64) {\r\n        if (typeof jws.payload !== 'string') {\r\n            throw new JWSInvalid('JWS Payload must be a string');\r\n        }\r\n    }\r\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\r\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\r\n    }\r\n    let resolvedKey = false;\r\n    if (typeof key === 'function') {\r\n        key = await key(parsedProt, jws);\r\n        resolvedKey = true;\r\n    }\r\n    checkKeyType(alg, key, 'verify');\r\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\r\n    let signature;\r\n    try {\r\n        signature = base64url(jws.signature);\r\n    }\r\n    catch {\r\n        throw new JWSInvalid('Failed to base64url decode the signature');\r\n    }\r\n    const verified = await verify(alg, key, signature, data);\r\n    if (!verified) {\r\n        throw new JWSSignatureVerificationFailed();\r\n    }\r\n    let payload;\r\n    if (b64) {\r\n        try {\r\n            payload = base64url(jws.payload);\r\n        }\r\n        catch {\r\n            throw new JWSInvalid('Failed to base64url decode the payload');\r\n        }\r\n    }\r\n    else if (typeof jws.payload === 'string') {\r\n        payload = encoder.encode(jws.payload);\r\n    }\r\n    else {\r\n        payload = jws.payload;\r\n    }\r\n    const result = { payload };\r\n    if (jws.protected !== undefined) {\r\n        result.protectedHeader = parsedProt;\r\n    }\r\n    if (jws.header !== undefined) {\r\n        result.unprotectedHeader = jws.header;\r\n    }\r\n    if (resolvedKey) {\r\n        return { ...result, key };\r\n    }\r\n    return result;\r\n}\r\n", "import { flattenedVerify } from '../flattened/verify.js';\r\nimport { JWSInvalid } from '../../util/errors.js';\r\nimport { decoder } from '../../lib/buffer_utils.js';\r\nexport async function compactVerify(jws, key, options) {\r\n    if (jws instanceof Uint8Array) {\r\n        jws = decoder.decode(jws);\r\n    }\r\n    if (typeof jws !== 'string') {\r\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\r\n    }\r\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\r\n    if (length !== 3) {\r\n        throw new JWSInvalid('Invalid Compact JWS');\r\n    }\r\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\r\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: verified.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { flattenedVerify } from '../flattened/verify.js';\r\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\r\nimport isObject from '../../lib/is_object.js';\r\nexport async function generalVerify(jws, key, options) {\r\n    if (!isObject(jws)) {\r\n        throw new JWSInvalid('General JWS must be an object');\r\n    }\r\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\r\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\r\n    }\r\n    for (const signature of jws.signatures) {\r\n        try {\r\n            return await flattenedVerify({\r\n                header: signature.header,\r\n                payload: jws.payload,\r\n                protected: signature.protected,\r\n                signature: signature.signature,\r\n            }, key, options);\r\n        }\r\n        catch {\r\n        }\r\n    }\r\n    throw new JWSSignatureVerificationFailed();\r\n}\r\n", "export default (date) => Math.floor(date.getTime() / 1000);\r\n", "const minute = 60;\r\nconst hour = minute * 60;\r\nconst day = hour * 24;\r\nconst week = day * 7;\r\nconst year = day * 365.25;\r\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\r\nexport default (str) => {\r\n    const matched = REGEX.exec(str);\r\n    if (!matched || (matched[4] && matched[1])) {\r\n        throw new TypeError('Invalid time period format');\r\n    }\r\n    const value = parseFloat(matched[2]);\r\n    const unit = matched[3].toLowerCase();\r\n    let numericDate;\r\n    switch (unit) {\r\n        case 'sec':\r\n        case 'secs':\r\n        case 'second':\r\n        case 'seconds':\r\n        case 's':\r\n            numericDate = Math.round(value);\r\n            break;\r\n        case 'minute':\r\n        case 'minutes':\r\n        case 'min':\r\n        case 'mins':\r\n        case 'm':\r\n            numericDate = Math.round(value * minute);\r\n            break;\r\n        case 'hour':\r\n        case 'hours':\r\n        case 'hr':\r\n        case 'hrs':\r\n        case 'h':\r\n            numericDate = Math.round(value * hour);\r\n            break;\r\n        case 'day':\r\n        case 'days':\r\n        case 'd':\r\n            numericDate = Math.round(value * day);\r\n            break;\r\n        case 'week':\r\n        case 'weeks':\r\n        case 'w':\r\n            numericDate = Math.round(value * week);\r\n            break;\r\n        default:\r\n            numericDate = Math.round(value * year);\r\n            break;\r\n    }\r\n    if (matched[1] === '-' || matched[4] === 'ago') {\r\n        return -numericDate;\r\n    }\r\n    return numericDate;\r\n};\r\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\r\nimport { decoder } from './buffer_utils.js';\r\nimport epoch from './epoch.js';\r\nimport secs from './secs.js';\r\nimport isObject from './is_object.js';\r\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\r\nconst checkAudiencePresence = (audPayload, audOption) => {\r\n    if (typeof audPayload === 'string') {\r\n        return audOption.includes(audPayload);\r\n    }\r\n    if (Array.isArray(audPayload)) {\r\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\r\n    }\r\n    return false;\r\n};\r\nexport default (protectedHeader, encodedPayload, options = {}) => {\r\n    const { typ } = options;\r\n    if (typ &&\r\n        (typeof protectedHeader.typ !== 'string' ||\r\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\r\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\r\n    }\r\n    let payload;\r\n    try {\r\n        payload = JSON.parse(decoder.decode(encodedPayload));\r\n    }\r\n    catch {\r\n    }\r\n    if (!isObject(payload)) {\r\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\r\n    }\r\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\r\n    const presenceCheck = [...requiredClaims];\r\n    if (maxTokenAge !== undefined)\r\n        presenceCheck.push('iat');\r\n    if (audience !== undefined)\r\n        presenceCheck.push('aud');\r\n    if (subject !== undefined)\r\n        presenceCheck.push('sub');\r\n    if (issuer !== undefined)\r\n        presenceCheck.push('iss');\r\n    for (const claim of new Set(presenceCheck.reverse())) {\r\n        if (!(claim in payload)) {\r\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\r\n        }\r\n    }\r\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\r\n    }\r\n    if (subject && payload.sub !== subject) {\r\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\r\n    }\r\n    if (audience &&\r\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\r\n    }\r\n    let tolerance;\r\n    switch (typeof options.clockTolerance) {\r\n        case 'string':\r\n            tolerance = secs(options.clockTolerance);\r\n            break;\r\n        case 'number':\r\n            tolerance = options.clockTolerance;\r\n            break;\r\n        case 'undefined':\r\n            tolerance = 0;\r\n            break;\r\n        default:\r\n            throw new TypeError('Invalid clockTolerance option type');\r\n    }\r\n    const { currentDate } = options;\r\n    const now = epoch(currentDate || new Date());\r\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\r\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\r\n    }\r\n    if (payload.nbf !== undefined) {\r\n        if (typeof payload.nbf !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\r\n        }\r\n        if (payload.nbf > now + tolerance) {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\r\n        }\r\n    }\r\n    if (payload.exp !== undefined) {\r\n        if (typeof payload.exp !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\r\n        }\r\n        if (payload.exp <= now - tolerance) {\r\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\r\n        }\r\n    }\r\n    if (maxTokenAge) {\r\n        const age = now - payload.iat;\r\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\r\n        if (age - tolerance > max) {\r\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\r\n        }\r\n        if (age < 0 - tolerance) {\r\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\r\n        }\r\n    }\r\n    return payload;\r\n};\r\n", "import { compactVerify } from '../jws/compact/verify.js';\r\nimport jwtPayload from '../lib/jwt_claims_set.js';\r\nimport { JWTInvalid } from '../util/errors.js';\r\nexport async function jwtVerify(jwt, key, options) {\r\n    const verified = await compactVerify(jwt, key, options);\r\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\r\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\r\n    }\r\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\r\n    const result = { payload, protectedHeader: verified.protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: verified.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { compactDecrypt } from '../jwe/compact/decrypt.js';\r\nimport jwtPayload from '../lib/jwt_claims_set.js';\r\nimport { JWTClaimValidationFailed } from '../util/errors.js';\r\nexport async function jwtDecrypt(jwt, key, options) {\r\n    const decrypted = await compactDecrypt(jwt, key, options);\r\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\r\n    const { protectedHeader } = decrypted;\r\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\r\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\r\n    }\r\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\r\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\r\n    }\r\n    if (protectedHeader.aud !== undefined &&\r\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\r\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\r\n    }\r\n    const result = { payload, protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: decrypted.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\r\nexport class CompactEncrypt {\r\n    constructor(plaintext) {\r\n        this._flattened = new FlattenedEncrypt(plaintext);\r\n    }\r\n    setContentEncryptionKey(cek) {\r\n        this._flattened.setContentEncryptionKey(cek);\r\n        return this;\r\n    }\r\n    setInitializationVector(iv) {\r\n        this._flattened.setInitializationVector(iv);\r\n        return this;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        this._flattened.setProtectedHeader(protectedHeader);\r\n        return this;\r\n    }\r\n    setKeyManagementParameters(parameters) {\r\n        this._flattened.setKeyManagementParameters(parameters);\r\n        return this;\r\n    }\r\n    async encrypt(key, options) {\r\n        const jwe = await this._flattened.encrypt(key, options);\r\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\r\n    }\r\n}\r\n", "import subtleAlgorithm from './subtle_dsa.js';\r\nimport crypto from './webcrypto.js';\r\nimport checkKeyLength from './check_key_length.js';\r\nimport getSignKey from './get_sign_verify_key.js';\r\nconst sign = async (alg, key, data) => {\r\n    const cryptoKey = await getSignKey(alg, key, 'sign');\r\n    checkKeyLength(alg, cryptoKey);\r\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\r\n    return new Uint8Array(signature);\r\n};\r\nexport default sign;\r\n", "import { encode as base64url } from '../../runtime/base64url.js';\r\nimport sign from '../../runtime/sign.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport { JWSInvalid } from '../../util/errors.js';\r\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\r\nimport checkKeyType from '../../lib/check_key_type.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nexport class FlattenedSign {\r\n    constructor(payload) {\r\n        if (!(payload instanceof Uint8Array)) {\r\n            throw new TypeError('payload must be an instance of Uint8Array');\r\n        }\r\n        this._payload = payload;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this._protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this._protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setUnprotectedHeader(unprotectedHeader) {\r\n        if (this._unprotectedHeader) {\r\n            throw new TypeError('setUnprotectedHeader can only be called once');\r\n        }\r\n        this._unprotectedHeader = unprotectedHeader;\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        if (!this._protectedHeader && !this._unprotectedHeader) {\r\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\r\n        }\r\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\r\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\r\n        }\r\n        const joseHeader = {\r\n            ...this._protectedHeader,\r\n            ...this._unprotectedHeader,\r\n        };\r\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\r\n        let b64 = true;\r\n        if (extensions.has('b64')) {\r\n            b64 = this._protectedHeader.b64;\r\n            if (typeof b64 !== 'boolean') {\r\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\r\n            }\r\n        }\r\n        const { alg } = joseHeader;\r\n        if (typeof alg !== 'string' || !alg) {\r\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n        }\r\n        checkKeyType(alg, key, 'sign');\r\n        let payload = this._payload;\r\n        if (b64) {\r\n            payload = encoder.encode(base64url(payload));\r\n        }\r\n        let protectedHeader;\r\n        if (this._protectedHeader) {\r\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\r\n        }\r\n        else {\r\n            protectedHeader = encoder.encode('');\r\n        }\r\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\r\n        const signature = await sign(alg, key, data);\r\n        const jws = {\r\n            signature: base64url(signature),\r\n            payload: '',\r\n        };\r\n        if (b64) {\r\n            jws.payload = decoder.decode(payload);\r\n        }\r\n        if (this._unprotectedHeader) {\r\n            jws.header = this._unprotectedHeader;\r\n        }\r\n        if (this._protectedHeader) {\r\n            jws.protected = decoder.decode(protectedHeader);\r\n        }\r\n        return jws;\r\n    }\r\n}\r\n", "import { FlattenedSign } from '../flattened/sign.js';\r\nexport class CompactSign {\r\n    constructor(payload) {\r\n        this._flattened = new FlattenedSign(payload);\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        this._flattened.setProtectedHeader(protectedHeader);\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        const jws = await this._flattened.sign(key, options);\r\n        if (jws.payload === undefined) {\r\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\r\n        }\r\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\r\n    }\r\n}\r\n", "import { FlattenedSign } from '../flattened/sign.js';\r\nimport { JWSInvalid } from '../../util/errors.js';\r\nclass IndividualSignature {\r\n    constructor(sig, key, options) {\r\n        this.parent = sig;\r\n        this.key = key;\r\n        this.options = options;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this.protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this.protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setUnprotectedHeader(unprotectedHeader) {\r\n        if (this.unprotectedHeader) {\r\n            throw new TypeError('setUnprotectedHeader can only be called once');\r\n        }\r\n        this.unprotectedHeader = unprotectedHeader;\r\n        return this;\r\n    }\r\n    addSignature(...args) {\r\n        return this.parent.addSignature(...args);\r\n    }\r\n    sign(...args) {\r\n        return this.parent.sign(...args);\r\n    }\r\n    done() {\r\n        return this.parent;\r\n    }\r\n}\r\nexport class GeneralSign {\r\n    constructor(payload) {\r\n        this._signatures = [];\r\n        this._payload = payload;\r\n    }\r\n    addSignature(key, options) {\r\n        const signature = new IndividualSignature(this, key, options);\r\n        this._signatures.push(signature);\r\n        return signature;\r\n    }\r\n    async sign() {\r\n        if (!this._signatures.length) {\r\n            throw new JWSInvalid('at least one signature must be added');\r\n        }\r\n        const jws = {\r\n            signatures: [],\r\n            payload: '',\r\n        };\r\n        for (let i = 0; i < this._signatures.length; i++) {\r\n            const signature = this._signatures[i];\r\n            const flattened = new FlattenedSign(this._payload);\r\n            flattened.setProtectedHeader(signature.protectedHeader);\r\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\r\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\r\n            if (i === 0) {\r\n                jws.payload = payload;\r\n            }\r\n            else if (jws.payload !== payload) {\r\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\r\n            }\r\n            jws.signatures.push(rest);\r\n        }\r\n        return jws;\r\n    }\r\n}\r\n", "import epoch from '../lib/epoch.js';\r\nimport isObject from '../lib/is_object.js';\r\nimport secs from '../lib/secs.js';\r\nfunction validateInput(label, input) {\r\n    if (!Number.isFinite(input)) {\r\n        throw new TypeError(`Invalid ${label} input`);\r\n    }\r\n    return input;\r\n}\r\nexport class ProduceJWT {\r\n    constructor(payload = {}) {\r\n        if (!isObject(payload)) {\r\n            throw new TypeError('JWT Claims Set MUST be an object');\r\n        }\r\n        this._payload = payload;\r\n    }\r\n    setIssuer(issuer) {\r\n        this._payload = { ...this._payload, iss: issuer };\r\n        return this;\r\n    }\r\n    setSubject(subject) {\r\n        this._payload = { ...this._payload, sub: subject };\r\n        return this;\r\n    }\r\n    setAudience(audience) {\r\n        this._payload = { ...this._payload, aud: audience };\r\n        return this;\r\n    }\r\n    setJti(jwtId) {\r\n        this._payload = { ...this._payload, jti: jwtId };\r\n        return this;\r\n    }\r\n    setNotBefore(input) {\r\n        if (typeof input === 'number') {\r\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\r\n        }\r\n        else if (input instanceof Date) {\r\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\r\n        }\r\n        else {\r\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\r\n        }\r\n        return this;\r\n    }\r\n    setExpirationTime(input) {\r\n        if (typeof input === 'number') {\r\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\r\n        }\r\n        else if (input instanceof Date) {\r\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\r\n        }\r\n        else {\r\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\r\n        }\r\n        return this;\r\n    }\r\n    setIssuedAt(input) {\r\n        if (typeof input === 'undefined') {\r\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\r\n        }\r\n        else if (input instanceof Date) {\r\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\r\n        }\r\n        else if (typeof input === 'string') {\r\n            this._payload = {\r\n                ...this._payload,\r\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\r\n            };\r\n        }\r\n        else {\r\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\r\n        }\r\n        return this;\r\n    }\r\n}\r\n", "import { CompactSign } from '../jws/compact/sign.js';\r\nimport { JWTInvalid } from '../util/errors.js';\r\nimport { encoder } from '../lib/buffer_utils.js';\r\nimport { ProduceJWT } from './produce.js';\r\nexport class SignJWT extends ProduceJWT {\r\n    setProtectedHeader(protectedHeader) {\r\n        this._protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\r\n        sig.setProtectedHeader(this._protectedHeader);\r\n        if (Array.isArray(this._protectedHeader?.crit) &&\r\n            this._protectedHeader.crit.includes('b64') &&\r\n            this._protectedHeader.b64 === false) {\r\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\r\n        }\r\n        return sig.sign(key, options);\r\n    }\r\n}\r\n", "import { CompactEncrypt } from '../jwe/compact/encrypt.js';\r\nimport { encoder } from '../lib/buffer_utils.js';\r\nimport { ProduceJWT } from './produce.js';\r\nexport class EncryptJWT extends ProduceJWT {\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this._protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this._protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setKeyManagementParameters(parameters) {\r\n        if (this._keyManagementParameters) {\r\n            throw new TypeError('setKeyManagementParameters can only be called once');\r\n        }\r\n        this._keyManagementParameters = parameters;\r\n        return this;\r\n    }\r\n    setContentEncryptionKey(cek) {\r\n        if (this._cek) {\r\n            throw new TypeError('setContentEncryptionKey can only be called once');\r\n        }\r\n        this._cek = cek;\r\n        return this;\r\n    }\r\n    setInitializationVector(iv) {\r\n        if (this._iv) {\r\n            throw new TypeError('setInitializationVector can only be called once');\r\n        }\r\n        this._iv = iv;\r\n        return this;\r\n    }\r\n    replicateIssuerAsHeader() {\r\n        this._replicateIssuerAsHeader = true;\r\n        return this;\r\n    }\r\n    replicateSubjectAsHeader() {\r\n        this._replicateSubjectAsHeader = true;\r\n        return this;\r\n    }\r\n    replicateAudienceAsHeader() {\r\n        this._replicateAudienceAsHeader = true;\r\n        return this;\r\n    }\r\n    async encrypt(key, options) {\r\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\r\n        if (this._replicateIssuerAsHeader) {\r\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\r\n        }\r\n        if (this._replicateSubjectAsHeader) {\r\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\r\n        }\r\n        if (this._replicateAudienceAsHeader) {\r\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\r\n        }\r\n        enc.setProtectedHeader(this._protectedHeader);\r\n        if (this._iv) {\r\n            enc.setInitializationVector(this._iv);\r\n        }\r\n        if (this._cek) {\r\n            enc.setContentEncryptionKey(this._cek);\r\n        }\r\n        if (this._keyManagementParameters) {\r\n            enc.setKeyManagementParameters(this._keyManagementParameters);\r\n        }\r\n        return enc.encrypt(key, options);\r\n    }\r\n}\r\n", "import digest from '../runtime/digest.js';\r\nimport { encode as base64url } from '../runtime/base64url.js';\r\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\r\nimport { encoder } from '../lib/buffer_utils.js';\r\nimport isObject from '../lib/is_object.js';\r\nconst check = (value, description) => {\r\n    if (typeof value !== 'string' || !value) {\r\n        throw new JWKInvalid(`${description} missing or invalid`);\r\n    }\r\n};\r\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\r\n    if (!isObject(jwk)) {\r\n        throw new TypeError('JWK must be an object');\r\n    }\r\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\r\n    if (digestAlgorithm !== 'sha256' &&\r\n        digestAlgorithm !== 'sha384' &&\r\n        digestAlgorithm !== 'sha512') {\r\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\r\n    }\r\n    let components;\r\n    switch (jwk.kty) {\r\n        case 'EC':\r\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\r\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\r\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\r\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\r\n            break;\r\n        case 'OKP':\r\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\r\n            check(jwk.x, '\"x\" (Public Key) Parameter');\r\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\r\n            break;\r\n        case 'RSA':\r\n            check(jwk.e, '\"e\" (Exponent) Parameter');\r\n            check(jwk.n, '\"n\" (Modulus) Parameter');\r\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\r\n            break;\r\n        case 'oct':\r\n            check(jwk.k, '\"k\" (Key Value) Parameter');\r\n            components = { k: jwk.k, kty: jwk.kty };\r\n            break;\r\n        default:\r\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\r\n    }\r\n    const data = encoder.encode(JSON.stringify(components));\r\n    return base64url(await digest(digestAlgorithm, data));\r\n}\r\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\r\n    digestAlgorithm ?? (digestAlgorithm = 'sha256');\r\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\r\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\r\n}\r\n", "import { importJWK } from '../key/import.js';\r\nimport isObject from '../lib/is_object.js';\r\nimport { JWSInvalid } from '../util/errors.js';\r\nexport async function EmbeddedJWK(protectedHeader, token) {\r\n    const joseHeader = {\r\n        ...protectedHeader,\r\n        ...token?.header,\r\n    };\r\n    if (!isObject(joseHeader.jwk)) {\r\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\r\n    }\r\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg);\r\n    if (key instanceof Uint8Array || key.type !== 'public') {\r\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\r\n    }\r\n    return key;\r\n}\r\n", "import { importJWK } from '../key/import.js';\r\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\r\nimport isObject from '../lib/is_object.js';\r\nfunction getKtyFromAlg(alg) {\r\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\r\n        case 'RS':\r\n        case 'PS':\r\n            return 'RSA';\r\n        case 'ES':\r\n            return 'EC';\r\n        case 'Ed':\r\n            return 'OKP';\r\n        default:\r\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\r\n    }\r\n}\r\nexport function isJWKSLike(jwks) {\r\n    return (jwks &&\r\n        typeof jwks === 'object' &&\r\n        Array.isArray(jwks.keys) &&\r\n        jwks.keys.every(isJWKLike));\r\n}\r\nfunction isJWKLike(key) {\r\n    return isObject(key);\r\n}\r\nfunction clone(obj) {\r\n    if (typeof structuredClone === 'function') {\r\n        return structuredClone(obj);\r\n    }\r\n    return JSON.parse(JSON.stringify(obj));\r\n}\r\nexport class LocalJWKSet {\r\n    constructor(jwks) {\r\n        this._cached = new WeakMap();\r\n        if (!isJWKSLike(jwks)) {\r\n            throw new JWKSInvalid('JSON Web Key Set malformed');\r\n        }\r\n        this._jwks = clone(jwks);\r\n    }\r\n    async getKey(protectedHeader, token) {\r\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\r\n        const kty = getKtyFromAlg(alg);\r\n        const candidates = this._jwks.keys.filter((jwk) => {\r\n            let candidate = kty === jwk.kty;\r\n            if (candidate && typeof kid === 'string') {\r\n                candidate = kid === jwk.kid;\r\n            }\r\n            if (candidate && typeof jwk.alg === 'string') {\r\n                candidate = alg === jwk.alg;\r\n            }\r\n            if (candidate && typeof jwk.use === 'string') {\r\n                candidate = jwk.use === 'sig';\r\n            }\r\n            if (candidate && Array.isArray(jwk.key_ops)) {\r\n                candidate = jwk.key_ops.includes('verify');\r\n            }\r\n            if (candidate && alg === 'EdDSA') {\r\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\r\n            }\r\n            if (candidate) {\r\n                switch (alg) {\r\n                    case 'ES256':\r\n                        candidate = jwk.crv === 'P-256';\r\n                        break;\r\n                    case 'ES256K':\r\n                        candidate = jwk.crv === 'secp256k1';\r\n                        break;\r\n                    case 'ES384':\r\n                        candidate = jwk.crv === 'P-384';\r\n                        break;\r\n                    case 'ES512':\r\n                        candidate = jwk.crv === 'P-521';\r\n                        break;\r\n                }\r\n            }\r\n            return candidate;\r\n        });\r\n        const { 0: jwk, length } = candidates;\r\n        if (length === 0) {\r\n            throw new JWKSNoMatchingKey();\r\n        }\r\n        if (length !== 1) {\r\n            const error = new JWKSMultipleMatchingKeys();\r\n            const { _cached } = this;\r\n            error[Symbol.asyncIterator] = async function* () {\r\n                for (const jwk of candidates) {\r\n                    try {\r\n                        yield await importWithAlgCache(_cached, jwk, alg);\r\n                    }\r\n                    catch { }\r\n                }\r\n            };\r\n            throw error;\r\n        }\r\n        return importWithAlgCache(this._cached, jwk, alg);\r\n    }\r\n}\r\nasync function importWithAlgCache(cache, jwk, alg) {\r\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\r\n    if (cached[alg] === undefined) {\r\n        const key = await importJWK({ ...jwk, ext: true }, alg);\r\n        if (key instanceof Uint8Array || key.type !== 'public') {\r\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\r\n        }\r\n        cached[alg] = key;\r\n    }\r\n    return cached[alg];\r\n}\r\nexport function createLocalJWKSet(jwks) {\r\n    const set = new LocalJWKSet(jwks);\r\n    return async (protectedHeader, token) => set.getKey(protectedHeader, token);\r\n}\r\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\r\nconst fetchJwks = async (url, timeout, options) => {\r\n    let controller;\r\n    let id;\r\n    let timedOut = false;\r\n    if (typeof AbortController === 'function') {\r\n        controller = new AbortController();\r\n        id = setTimeout(() => {\r\n            timedOut = true;\r\n            controller.abort();\r\n        }, timeout);\r\n    }\r\n    const response = await fetch(url.href, {\r\n        signal: controller ? controller.signal : undefined,\r\n        redirect: 'manual',\r\n        headers: options.headers,\r\n    }).catch((err) => {\r\n        if (timedOut)\r\n            throw new JWKSTimeout();\r\n        throw err;\r\n    });\r\n    if (id !== undefined)\r\n        clearTimeout(id);\r\n    if (response.status !== 200) {\r\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\r\n    }\r\n    try {\r\n        return await response.json();\r\n    }\r\n    catch {\r\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\r\n    }\r\n};\r\nexport default fetchJwks;\r\n", "import fetchJwks from '../runtime/fetch_jwks.js';\r\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\r\nimport { isJWKSLike, LocalJWKSet } from './local.js';\r\nfunction isCloudflareWorkers() {\r\n    return (typeof WebSocketPair !== 'undefined' ||\r\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\r\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\r\n}\r\nlet USER_AGENT;\r\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\r\n    const NAME = 'jose';\r\n    const VERSION = 'v5.2.3';\r\n    USER_AGENT = `${NAME}/${VERSION}`;\r\n}\r\nclass RemoteJWKSet extends LocalJWKSet {\r\n    constructor(url, options) {\r\n        super({ keys: [] });\r\n        this._jwks = undefined;\r\n        if (!(url instanceof URL)) {\r\n            throw new TypeError('url must be an instance of URL');\r\n        }\r\n        this._url = new URL(url.href);\r\n        this._options = { agent: options?.agent, headers: options?.headers };\r\n        this._timeoutDuration =\r\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\r\n        this._cooldownDuration =\r\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\r\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\r\n    }\r\n    coolingDown() {\r\n        return typeof this._jwksTimestamp === 'number'\r\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\r\n            : false;\r\n    }\r\n    fresh() {\r\n        return typeof this._jwksTimestamp === 'number'\r\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\r\n            : false;\r\n    }\r\n    async getKey(protectedHeader, token) {\r\n        if (!this._jwks || !this.fresh()) {\r\n            await this.reload();\r\n        }\r\n        try {\r\n            return await super.getKey(protectedHeader, token);\r\n        }\r\n        catch (err) {\r\n            if (err instanceof JWKSNoMatchingKey) {\r\n                if (this.coolingDown() === false) {\r\n                    await this.reload();\r\n                    return super.getKey(protectedHeader, token);\r\n                }\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    async reload() {\r\n        if (this._pendingFetch && isCloudflareWorkers()) {\r\n            this._pendingFetch = undefined;\r\n        }\r\n        const headers = new Headers(this._options.headers);\r\n        if (USER_AGENT && !headers.has('User-Agent')) {\r\n            headers.set('User-Agent', USER_AGENT);\r\n            this._options.headers = Object.fromEntries(headers.entries());\r\n        }\r\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\r\n            .then((json) => {\r\n            if (!isJWKSLike(json)) {\r\n                throw new JWKSInvalid('JSON Web Key Set malformed');\r\n            }\r\n            this._jwks = { keys: json.keys };\r\n            this._jwksTimestamp = Date.now();\r\n            this._pendingFetch = undefined;\r\n        })\r\n            .catch((err) => {\r\n            this._pendingFetch = undefined;\r\n            throw err;\r\n        }));\r\n        await this._pendingFetch;\r\n    }\r\n}\r\nexport function createRemoteJWKSet(url, options) {\r\n    const set = new RemoteJWKSet(url, options);\r\n    return async (protectedHeader, token) => set.getKey(protectedHeader, token);\r\n}\r\n", "import * as base64url from '../runtime/base64url.js';\r\nimport { decoder } from '../lib/buffer_utils.js';\r\nimport { JWTInvalid } from '../util/errors.js';\r\nimport jwtPayload from '../lib/jwt_claims_set.js';\r\nimport { ProduceJWT } from './produce.js';\r\nexport class UnsecuredJWT extends ProduceJWT {\r\n    encode() {\r\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\r\n        const payload = base64url.encode(JSON.stringify(this._payload));\r\n        return `${header}.${payload}.`;\r\n    }\r\n    static decode(jwt, options) {\r\n        if (typeof jwt !== 'string') {\r\n            throw new JWTInvalid('Unsecured JWT must be a string');\r\n        }\r\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\r\n        if (length !== 3 || signature !== '') {\r\n            throw new JWTInvalid('Invalid Unsecured JWT');\r\n        }\r\n        let header;\r\n        try {\r\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\r\n            if (header.alg !== 'none')\r\n                throw new Error();\r\n        }\r\n        catch {\r\n            throw new JWTInvalid('Invalid Unsecured JWT');\r\n        }\r\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\r\n        return { payload, header };\r\n    }\r\n}\r\n", "import * as base64url from '../runtime/base64url.js';\r\nexport const encode = base64url.encode;\r\nexport const decode = base64url.decode;\r\n", "import { decode as base64url } from './base64url.js';\r\nimport { decoder } from '../lib/buffer_utils.js';\r\nimport isObject from '../lib/is_object.js';\r\nexport function decodeProtectedHeader(token) {\r\n    let protectedB64u;\r\n    if (typeof token === 'string') {\r\n        const parts = token.split('.');\r\n        if (parts.length === 3 || parts.length === 5) {\r\n            ;\r\n            [protectedB64u] = parts;\r\n        }\r\n    }\r\n    else if (typeof token === 'object' && token) {\r\n        if ('protected' in token) {\r\n            protectedB64u = token.protected;\r\n        }\r\n        else {\r\n            throw new TypeError('Token does not contain a Protected Header');\r\n        }\r\n    }\r\n    try {\r\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\r\n            throw new Error();\r\n        }\r\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\r\n        if (!isObject(result)) {\r\n            throw new Error();\r\n        }\r\n        return result;\r\n    }\r\n    catch {\r\n        throw new TypeError('Invalid Token or Protected Header formatting');\r\n    }\r\n}\r\n", "import { decode as base64url } from './base64url.js';\r\nimport { decoder } from '../lib/buffer_utils.js';\r\nimport isObject from '../lib/is_object.js';\r\nimport { JWTInvalid } from './errors.js';\r\nexport function decodeJwt(jwt) {\r\n    if (typeof jwt !== 'string')\r\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\r\n    const { 1: payload, length } = jwt.split('.');\r\n    if (length === 5)\r\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\r\n    if (length !== 3)\r\n        throw new JWTInvalid('Invalid JWT');\r\n    if (!payload)\r\n        throw new JWTInvalid('JWTs must contain a payload');\r\n    let decoded;\r\n    try {\r\n        decoded = base64url(payload);\r\n    }\r\n    catch {\r\n        throw new JWTInvalid('Failed to base64url decode the payload');\r\n    }\r\n    let result;\r\n    try {\r\n        result = JSON.parse(decoder.decode(decoded));\r\n    }\r\n    catch {\r\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\r\n    }\r\n    if (!isObject(result))\r\n        throw new JWTInvalid('Invalid JWT Claims Set');\r\n    return result;\r\n}\r\n", "import crypto from './webcrypto.js';\r\nimport { JOSENotSupported } from '../util/errors.js';\r\nimport random from './random.js';\r\nexport async function generateSecret(alg, options) {\r\n    let length;\r\n    let algorithm;\r\n    let keyUsages;\r\n    switch (alg) {\r\n        case 'HS256':\r\n        case 'HS384':\r\n        case 'HS512':\r\n            length = parseInt(alg.slice(-3), 10);\r\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'A128CBC-HS256':\r\n        case 'A192CBC-HS384':\r\n        case 'A256CBC-HS512':\r\n            length = parseInt(alg.slice(-3), 10);\r\n            return random(new Uint8Array(length >> 3));\r\n        case 'A128KW':\r\n        case 'A192KW':\r\n        case 'A256KW':\r\n            length = parseInt(alg.slice(1, 4), 10);\r\n            algorithm = { name: 'AES-KW', length };\r\n            keyUsages = ['wrapKey', 'unwrapKey'];\r\n            break;\r\n        case 'A128GCMKW':\r\n        case 'A192GCMKW':\r\n        case 'A256GCMKW':\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM':\r\n            length = parseInt(alg.slice(1, 4), 10);\r\n            algorithm = { name: 'AES-GCM', length };\r\n            keyUsages = ['encrypt', 'decrypt'];\r\n            break;\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n    }\r\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages);\r\n}\r\nfunction getModulusLengthOption(options) {\r\n    const modulusLength = options?.modulusLength ?? 2048;\r\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\r\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\r\n    }\r\n    return modulusLength;\r\n}\r\nexport async function generateKeyPair(alg, options) {\r\n    let algorithm;\r\n    let keyUsages;\r\n    switch (alg) {\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512':\r\n            algorithm = {\r\n                name: 'RSA-PSS',\r\n                hash: `SHA-${alg.slice(-3)}`,\r\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n                modulusLength: getModulusLengthOption(options),\r\n            };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512':\r\n            algorithm = {\r\n                name: 'RSASSA-PKCS1-v1_5',\r\n                hash: `SHA-${alg.slice(-3)}`,\r\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n                modulusLength: getModulusLengthOption(options),\r\n            };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512':\r\n            algorithm = {\r\n                name: 'RSA-OAEP',\r\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\r\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\r\n                modulusLength: getModulusLengthOption(options),\r\n            };\r\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\r\n            break;\r\n        case 'ES256':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'ES384':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'ES512':\r\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\r\n            keyUsages = ['sign', 'verify'];\r\n            break;\r\n        case 'EdDSA': {\r\n            keyUsages = ['sign', 'verify'];\r\n            const crv = options?.crv ?? 'Ed25519';\r\n            switch (crv) {\r\n                case 'Ed25519':\r\n                case 'Ed448':\r\n                    algorithm = { name: crv };\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\r\n            }\r\n            break;\r\n        }\r\n        case 'ECDH-ES':\r\n        case 'ECDH-ES+A128KW':\r\n        case 'ECDH-ES+A192KW':\r\n        case 'ECDH-ES+A256KW': {\r\n            keyUsages = ['deriveKey', 'deriveBits'];\r\n            const crv = options?.crv ?? 'P-256';\r\n            switch (crv) {\r\n                case 'P-256':\r\n                case 'P-384':\r\n                case 'P-521': {\r\n                    algorithm = { name: 'ECDH', namedCurve: crv };\r\n                    break;\r\n                }\r\n                case 'X25519':\r\n                case 'X448':\r\n                    algorithm = { name: crv };\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\r\n            }\r\n            break;\r\n        }\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n    }\r\n    return (crypto.subtle.generateKey(algorithm, options?.extractable ?? false, keyUsages));\r\n}\r\n", "import { generateKeyPair as generate } from '../runtime/generate.js';\r\nexport async function generateKeyPair(alg, options) {\r\n    return generate(alg, options);\r\n}\r\n", "import { generateSecret as generate } from '../runtime/generate.js';\r\nexport async function generateSecret(alg, options) {\r\n    return generate(alg, options);\r\n}\r\n", "export default 'WebCryptoAPI';\r\n", "import value from '../runtime/runtime.js';\r\nexport default value;\r\n"],
  "mappings": "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",
  "names": ["message", "types", "p2s", "getCryptoKey", "deriveKey", "p2s", "decrypt", "encrypt", "decrypt", "bitLength", "getNamedCurve", "byteLength", "encrypt", "wrap", "unwrap", "bitLength", "decrypt", "p2s", "unwrap", "protectedHeader", "bitLength", "encrypt", "p2s", "wrap", "jwe", "getCryptoKey", "getCryptoKey", "getCryptoKey", "jwk", "base64url_exports", "decode", "encode", "encode", "decode", "decode", "decode", "generateKeyPair", "generateSecret", "runtime_default"]
}
